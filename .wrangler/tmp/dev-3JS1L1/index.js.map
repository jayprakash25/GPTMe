{
  "version": 3,
  "sources": ["../bundle-xQC0iZ/checked-fetch.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/base64-js/index.js", "../bundle-xQC0iZ/middleware-loader.entry.ts", "../bundle-xQC0iZ/middleware-insertion-facade.js", "../../../src/worker/index.ts", "../../../node_modules/@cloudflare/ai/dist/index.js", "../../../node_modules/mustache/mustache.mjs", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/@tsndr/cloudflare-worker-jwt/index.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\Users\\ADMIN\\Desktop\\gptme\\.wrangler\\tmp\\dev-3JS1L1",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\.wrangler\\\\tmp\\\\bundle-xQC0iZ\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\.wrangler\\\\tmp\\\\bundle-xQC0iZ\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\.wrangler\\\\tmp\\\\bundle-xQC0iZ\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\src\\\\worker\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\gptme\\\\src\\\\worker\\\\index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Ai } from \"@cloudflare/ai\";\r\nimport { Hono } from \"hono\";\r\nimport jwt from \"@tsndr/cloudflare-worker-jwt\";\r\nimport { D1Database } from \"@cloudflare/workers-types\";\r\nimport { cors } from \"hono/cors\";\r\nimport { Context } from \"hono\";\r\n\r\n// Types\r\ninterface Env {\r\n  DB: D1Database;\r\n  AI: Ai;\r\n  JWT_SECRET: string;\r\n}\r\n\r\ninterface User {\r\n  google_id: string;\r\n  name: string | null;\r\n  email: string;\r\n  picture: string | null;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface Conversation {\r\n  id: number;\r\n  userId: string;\r\n  status: \"in_progress\" | \"completed\";\r\n  messages: string;\r\n  extractedInfo: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface JWTPayload {\r\n  payload: {\r\n    sub: string;\r\n    name: string;\r\n    email: string;\r\n    picture: string;\r\n    exp: number;\r\n  };\r\n}\r\n\r\ninterface Message {\r\n  role: string;\r\n  content: string;\r\n}\r\n\r\n\r\n\r\n// Type declaration for Hono context with user\r\ntype UserContext = Context<{ Bindings: Env; Variables: { user: JWTPayload } }>;\r\n\r\nconst app = new Hono<{ Bindings: Env }>();\r\n\r\n//CORS middleware\r\napp.use(\r\n  \"*\",\r\n  cors({\r\n    origin: [\"http://localhost:3000\"], // Add your frontend domains\r\n    allowMethods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\r\n    allowHeaders: [\"Content-Type\", \"Authorization\"],\r\n    exposeHeaders: [\"Content-Length\"],\r\n    maxAge: 600,\r\n    credentials: true,\r\n  })\r\n);\r\n\r\n// Centralized error handling middleware\r\napp.use(async (c, next) => {\r\n  try {\r\n    await next();\r\n  } catch (error) {\r\n    console.error(\"Unhandled error:\", error);\r\n    return c.json(\r\n      { statusCode: 500, message: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n});\r\n\r\n// Add user management endpoints\r\napp.post(\"/api/user\", async (c) => {\r\n  try {\r\n    const { googleId, name, email, picture, operation } = await c.req.json();\r\n\r\n    if (operation === \"upsert\") {\r\n      const existingUser = await c.env.DB.prepare(\r\n        \"SELECT * FROM users WHERE google_id = ?\"\r\n      )\r\n        .bind(googleId)\r\n        .first<User>();\r\n\r\n      const now = new Date().toISOString();\r\n\r\n      if (!existingUser) {\r\n        await c.env.DB.prepare(\r\n          `INSERT INTO users (\r\n              google_id, \r\n              name, \r\n              email, \r\n              picture, \r\n              created_at, \r\n              updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?)`\r\n        )\r\n          .bind(googleId, name, email, picture, now, now)\r\n          .run();\r\n      } else {\r\n        await c.env.DB.prepare(\r\n          `UPDATE users \r\n             SET name = ?, \r\n                 email = ?, \r\n                 picture = ?, \r\n                 updated_at = ? \r\n             WHERE google_id = ?`\r\n        )\r\n          .bind(name, email, picture, now, googleId)\r\n          .run();\r\n      }\r\n\r\n      return c.json({\r\n        statusCode: 200,\r\n        message: existingUser ? \"User updated\" : \"User created\",\r\n        data: { googleId, email },\r\n      });\r\n    }\r\n\r\n    return c.json(\r\n      { statusCode: 400, message: \"Invalid operation\" },\r\n      { status: 400 }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error in user operation:\", error);\r\n    return c.json(\r\n      { statusCode: 400, message: \"Invalid input data\" }, // More specific error message\r\n      { status: 400 }\r\n    );\r\n  }\r\n});\r\n\r\n// Add user verification endpoint\r\napp.get(\"/api/user/verify\", async (c) => {\r\n  try {\r\n    const googleId = c.req.query(\"googleId\");\r\n\r\n    if (!googleId) {\r\n      return c.json(\r\n        { statusCode: 400, message: \"Missing googleId\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const user = await c.env.DB.prepare(\r\n      \"SELECT * FROM users WHERE google_id = ?\"\r\n    )\r\n      .bind(googleId)\r\n      .first<User>();\r\n\r\n    return c.json({\r\n      statusCode: 200,\r\n      message: user ? \"User found\" : \"User not found\",\r\n      data: { exists: !!user },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error verifying user:\", error);\r\n    return c.json(\r\n      { statusCode: 500, message: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n});\r\n\r\n//JWT middeware\r\napp.use(\"/api/*\", async (c: UserContext, next) => {\r\n  const authHeader = c.req.header(\"Authorization\");\r\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\r\n    return c.json(\r\n      { statusCode: 401, message: \"Unauthorized\" },\r\n      { status: 401 }\r\n    );\r\n  }\r\n\r\n  const token = authHeader.split(\" \")[1];\r\n\r\n  try {\r\n    const isValid = await jwt.verify(token, c.env.JWT_SECRET);\r\n\r\n    if (!isValid) {\r\n      return c.json(\r\n        { statusCode: 401, message: \"Unauthorized\" },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const payload = jwt.decode(token) as JWTPayload;\r\n    console.log(\"payload\", payload);\r\n\r\n    if (\r\n      payload.payload.exp &&\r\n      payload.payload.exp < Math.floor(Date.now() / 1000)\r\n    ) {\r\n      return c.json(\r\n        { statusCode: 401, message: \"Token expired\" },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    c.set(\"user\", payload);\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return c.json(\r\n      { statusCode: 400, message: \"Invalid token\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  await next();\r\n});\r\n\r\napp.post(\"/api/conversation\", async (c: UserContext) => {\r\n  const ai = new Ai(c.env.AI);\r\n\r\n  try {\r\n    const { message, action } = await c.req.json();\r\n    const userId = c.get(\"user\").payload.sub;\r\n\r\n    if (action === \"fetch_history\") {\r\n      return await fetchConversationHistory(c.env.DB, userId);\r\n    }\r\n\r\n    return await processMessage(c.env.DB, ai, userId, message);\r\n  } catch (error) {\r\n    console.error(\"Error in conversation processing:\", error);\r\n    return c.json(\r\n      { statusCode: 400, message: \"Invalid input data\" }, // More specific error message\r\n      { status: 400 }\r\n    );\r\n  }\r\n});\r\n\r\n// to get gpt configuration\r\napp.get(\"/api/gpt-config\", async (c: UserContext) => {\r\n  const userId = c.get(\"user\").payload.sub;\r\n  try {\r\n    const config = await c.env.DB.prepare(\r\n      \"SELECT * FROM gpt_configurations WHERE userId = ?\"\r\n    ).bind(userId).first();\r\n\r\n    if (!config) {\r\n      // If no configuration exists, return the extracted info from the conversation\r\n      // You'll need to implement a function to get this information\r\n      const conversation = await c.env.DB.prepare(\r\n        \"SELECT extractedinfo FROM conversations WHERE userId = ? ORDER BY createdAt DESC LIMIT 1\"\r\n      ).bind(userId).first();\r\n\r\n      return c.json({\r\n        statusCode: 200,\r\n        message: \"No existing configuration, returning extracted info\",\r\n        data: {\r\n          name: \"\",\r\n          instructions: \"\",\r\n          extractedInfo: JSON.parse(conversation?.extractedInfo as string)\r\n        }\r\n      });\r\n    }\r\n\r\n    return c.json({\r\n      statusCode: 200,\r\n      message: \"Configuration fetched\",\r\n      data: {\r\n        name: config.name,\r\n        instructions: config.instructions,\r\n        extractedInfo: JSON.parse(config.extractedInfo as string)\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching configuration:\", error);\r\n    return c.json(\r\n      { statusCode: 500, message: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n});\r\n\r\n// New endpoint to update GPT configuration\r\napp.put(\"/api/gpt-config\", async (c: UserContext) => {\r\n  const userId = c.get(\"user\").payload.sub;\r\n  const { name, instructions, extractedInfo } = await c.req.json();\r\n\r\n  try {\r\n    const existingConfig = await c.env.DB.prepare(\r\n      \"SELECT id FROM gpt_configurations WHERE userId = ?\"\r\n    )\r\n      .bind(userId)\r\n      .first();\r\n\r\n    if (existingConfig) {\r\n      await c.env.DB.prepare(\r\n        `UPDATE gpt_configurations \r\n         SET name = ?, instructions = ?, extractedInfo = ?, updatedAt = CURRENT_TIMESTAMP \r\n         WHERE userId = ?`\r\n      )\r\n        .bind(name, instructions, JSON.stringify(extractedInfo), userId)\r\n        .run();\r\n    } else {\r\n      await c.env.DB.prepare(\r\n        `INSERT INTO gpt_configurations (userId, name, instructions, extractedInfo) \r\n         VALUES (?, ?, ?, ?)`\r\n      )\r\n        .bind(userId, name, instructions, JSON.stringify(extractedInfo))\r\n        .run();\r\n    }\r\n\r\n    return c.json({\r\n      statusCode: 200,\r\n      message: \"GPT configuration updated\",\r\n      data: { name, instructions, extractedInfo },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error updating GPT configuration:\", error);\r\n    return c.json(\r\n      { statusCode: 500, message: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n});\r\n\r\n// app.get(\"/api/conversation/history\", async (c) => {\r\n//   const userId = c.get(\"user\").sub;\r\n//   return await fetchConversationHistory(c.env.DB, userId);\r\n// });\r\n\r\nasync function fetchConversationHistory(db: D1Database, userId: string) {\r\n  const conversation = await db\r\n    .prepare(\r\n      \"SELECT * FROM conversations WHERE userId = ? ORDER BY createdAt DESC LIMIT 1\"\r\n    )\r\n    .bind(userId)\r\n    .first();\r\n\r\n  if (!conversation) {\r\n    return Response.json(\r\n      {\r\n        statusCode: 404,\r\n        message: \"No conversation found\",\r\n      },\r\n      { status: 404 }\r\n    );\r\n  }\r\n\r\n  return Response.json({\r\n    statusCode: 200,\r\n    message: \"Conversation history fetched\",\r\n    data: {\r\n      messages: JSON.parse(conversation.messages as string),\r\n      status: conversation.status,\r\n      extractedInfo: JSON.parse((conversation.extractedInfo as string) || \"{}\"),\r\n    },\r\n  });\r\n}\r\n\r\nasync function processMessage(\r\n  db: D1Database,\r\n  ai: Ai,\r\n  userId: string,\r\n  message: string\r\n) {\r\n  try {\r\n    let conversation = await db\r\n      .prepare(\r\n        \"SELECT * FROM conversations WHERE userId = ? ORDER BY createdAt DESC LIMIT 1\"\r\n      )\r\n      .bind(userId)\r\n      .first<Conversation>();\r\n\r\n    if (!conversation) {\r\n      await db\r\n        .prepare(\r\n          \"INSERT INTO conversations (userId, status, messages, extractedInfo) VALUES (?, ?, ?, ?)\"\r\n        )\r\n        .bind(userId, \"in_progress\", \"[]\", \"{}\")\r\n        .run();\r\n\r\n      conversation = await db\r\n        .prepare(\r\n          \"SELECT * FROM conversations WHERE userId = ? ORDER BY createdAt DESC LIMIT 1\"\r\n        )\r\n        .bind(userId)\r\n        .first<Conversation>();\r\n\r\n      if (!conversation) {\r\n        throw new Error(\"Failed to create conversation\");\r\n      }\r\n    }\r\n\r\n    const messages = JSON.parse(conversation.messages) as Message[];\r\n    messages.push({ role: \"user\", content: message });\r\n\r\n    let aiResponse = \"\";\r\n    let extractedInfo = JSON.parse(conversation.extractedInfo || \"{}\");\r\n\r\n    if (conversation.status === \"completed\") {\r\n      aiResponse =\r\n        \"Thank you for the additional information. Your digital twin has been updated.\";\r\n      extractedInfo = await extractKeyInfo(ai, messages);\r\n    } else {\r\n      const systemPrompt = `You are an AI assistant tasked with creating a personalized digital version of a user...`;\r\n      const augmentedMessages = [\r\n        { role: \"system\", content: systemPrompt },\r\n        ...messages,\r\n      ];\r\n\r\n      const completion = await ai.run(\"@cf/meta/llama-2-7b-chat-int8\", {\r\n        messages: augmentedMessages,\r\n      });\r\n\r\n      if (\r\n        typeof completion === \"object\" &&\r\n        completion !== null &&\r\n        \"response\" in completion\r\n      ) {\r\n        aiResponse = completion.response as string;\r\n      } else {\r\n        throw new Error(\"Invalid AI response format\");\r\n      }\r\n\r\n      if (\r\n        aiResponse.toLowerCase().includes(\"your digital version is now created\")\r\n      ) {\r\n        conversation.status = \"completed\";\r\n        extractedInfo = await extractKeyInfo(ai, messages);\r\n      }\r\n    }\r\n\r\n    messages.push({ role: \"assistant\", content: aiResponse });\r\n\r\n    await db\r\n      .prepare(\r\n        \"UPDATE conversations SET messages = ?, status = ?, extractedInfo = ? WHERE userId = ?\"\r\n      )\r\n      .bind(\r\n        JSON.stringify(messages),\r\n        conversation.status,\r\n        JSON.stringify(extractedInfo),\r\n        userId\r\n      )\r\n      .run();\r\n\r\n    return Response.json({\r\n      statusCode: 200,\r\n      message:\r\n        conversation.status === \"completed\"\r\n          ? \"Conversation completed\"\r\n          : \"Message processed\",\r\n      data: {\r\n        aiResponse,\r\n        status: conversation.status,\r\n        extractedInfo:\r\n          conversation.status === \"completed\" ? extractedInfo : undefined,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return Response.json(\r\n      {\r\n        statusCode: 500,\r\n        message: \"Internal server error\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nasync function extractKeyInfo(ai: Ai, messages: Message[]) {\r\n  const prompt = `\r\n    Summarize the user's responses into key personal traits, experiences, opinions, and behavioral patterns.\r\n    Conversation:\r\n    ${messages.map((m) => `${m.role.toUpperCase()}: ${m.content}`).join(\"\\n\\n\")}\r\n  `;\r\n\r\n  const completion = await ai.run(\"@cf/meta/llama-2-7b-chat-int8\", {\r\n    messages: [{ role: \"user\", content: prompt }],\r\n  });\r\n\r\n  if (\r\n    typeof completion === \"object\" &&\r\n    completion !== null &&\r\n    \"response\" in completion\r\n  ) {\r\n    return completion.response as string;\r\n  }\r\n  throw new Error(\"Invalid AI response format\");\r\n}\r\n\r\nexport default app;\r\n", "import*as e from\"base64-js\";import*as t from\"mustache\";var s;!function(e){e.String=\"str\",e.Bool=\"bool\",e.Float16=\"float16\",e.Float32=\"float32\",e.Int16=\"int16\",e.Int32=\"int32\",e.Int64=\"int64\",e.Int8=\"int8\",e.Uint16=\"uint16\",e.Uint32=\"uint32\",e.Uint64=\"uint64\",e.Uint8=\"uint8\"}(s||(s={}));const n=Object.getPrototypeOf(Uint8Array);function r(e){return Array.isArray(e)||e instanceof n}function a(e){return e instanceof n?e.length:e.flat(1/0).reduce(((e,t)=>e+(t instanceof n?t.length:1)),0)}function o(e,t){if(!r(t)){switch(e){case s.Bool:if(\"boolean\"==typeof t)return;break;case s.Float16:case s.Float32:if(\"number\"==typeof t)return;break;case s.Int8:case s.Uint8:case s.Int16:case s.Uint16:case s.Int32:case s.Uint32:if(Number.isInteger(t))return;break;case s.Int64:case s.Uint64:if(\"bigint\"==typeof t)return;break;case s.String:if(\"string\"==typeof t)return}throw new Error(`unexpected type \"${e}\" with value \"${t}\".`)}t.forEach((t=>o(e,t)))}function i(e,t){if(r(t))return[...t].map((t=>i(e,t)));switch(e){case s.String:case s.Bool:case s.Float16:case s.Float32:case s.Int8:case s.Uint8:case s.Int16:case s.Uint16:case s.Uint32:case s.Int32:return t;case s.Int64:case s.Uint64:return t.toString()}throw new Error(`unexpected type \"${e}\" with value \"${t}\".`)}function E(e,t){if(r(t))return t.map((t=>E(e,t)));switch(e){case s.String:case s.Bool:case s.Float16:case s.Float32:case s.Int8:case s.Uint8:case s.Int16:case s.Uint16:case s.Uint32:case s.Int32:return t;case s.Int64:case s.Uint64:return BigInt(t)}throw new Error(`unexpected type \"${e}\" with value \"${t}\".`)}class p{type;value;name;shape;constructor(e,t,s={}){this.type=e,this.value=t,s.validate&&o(e,this.value),void 0===s.shape?r(this.value)?this.shape=[a(t)]:this.shape=[]:this.shape=s.shape,s.validate&&function(e,t){if(0===e.length&&!r(t))return;const s=e.reduce(((e,t)=>{if(!Number.isInteger(t))throw new Error(`expected shape to be array-like of integers but found non-integer element \"${t}\"`);return e*t}),1);if(s!=a(t))throw new Error(`invalid shape: expected ${s} elements for shape ${e} but value array has length ${t.length}`)}(this.shape,this.value),this.name=s.name||null}static fromJSON(e){const{type:t,shape:s,value:n,b64Value:r,name:a}=e,o={shape:s,name:a};if(void 0!==r){const e=function(e,t){const s=atob(e),n=new Uint8Array(s.length);for(let e=0;e<s.length;e++)n[e]=s.charCodeAt(e);const r=new DataView(n.buffer).buffer;switch(t){case\"float32\":return new Float32Array(r);case\"float64\":return new Float64Array(r);case\"int32\":return new Int32Array(r);case\"int64\":return new BigInt64Array(r);default:throw Error(`invalid data type for base64 input: ${t}`)}}(r,t)[0];return new p(t,e,o)}return new p(t,E(t,n),o)}toJSON(){return{type:this.type,shape:this.shape,name:this.name,value:i(this.type,this.value)}}}const A=\"A chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\",R=\"Write code to solve the following coding problem that obeys the constraints and passes the example test cases. Please wrap your code answer using   ```:\",c=(e,t)=>[{role:\"system\",content:e},{role:\"user\",content:t}],m=e=>{const t={};e.temperature&&(t.temperature=e.temperature),e.max_tokens&&(t.max_tokens=e.max_tokens);const n=[new p(s.String,[e.prompt],{shape:[1],name:\"text_input\"}),new p(s.String,[JSON.stringify(t)],{shape:[1],name:\"sampling_parameters\"})];return e.stream&&n.push(new p(s.Bool,!0,{name:\"stream\"})),e.image&&(n.push(new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"image\"})),n.push(new p(s.Bool,!0,{name:\"exclude_input_in_output\"}))),n},u=(e,t)=>{let s=e.generated_text.value[0];if(t)for(const e in t)s=s.replace(t[e],\"\");return s},O=e=>(e.inputsDefaultsStream={max_tokens:1800,...e.inputsDefaultsStream||{}},e.inputsDefaults={max_tokens:256,...e.inputsDefaults||{}},e.preProcessingArgs={promptTemplate:\"bare\",defaultContext:A,defaultPromptMessages:c,...e.preProcessingArgs||{}},e={type:\"triton\",...e}),l=e=>(e.inputsDefaultsStream={max_tokens:512,...e.inputsDefaultsStream||{}},e.inputsDefaults={max_tokens:512,...e.inputsDefaults||{}},e.preProcessingArgs={promptTemplate:\"bare\",defaultContext:A,defaultPromptMessages:c,...e.preProcessingArgs||{}},e={type:\"vllm\",generateTensorsFunc:e=>m(e),postProcessingFunc:(e,t)=>e.name.value[0].slice(t.prompt.length),postProcessingFuncStream:(e,t,s)=>e.name.value[0],...e}),I=(e,t,s)=>({type:\"tgi\",inputsDefaultsStream:{max_tokens:512},inputsDefaults:{max_tokens:256},preProcessingArgs:{promptTemplate:e,defaultContext:t,defaultPromptMessages:c},postProcessingFunc:(e,t)=>u(e,s),postProcessingFuncStream:(e,t,n)=>u(e,s)}),T=[\"TENCH\",\"GOLDFISH\",\"WHITE SHARK\",\"TIGER SHARK\",\"HAMMERHEAD SHARK\",\"ELECTRIC RAY\",\"STINGRAY\",\"ROOSTER\",\"HEN\",\"OSTRICH\",\"BRAMBLING\",\"GOLDFINCH\",\"HOUSE FINCH\",\"SNOWBIRD\",\"INDIGO FINCH\",\"ROBIN\",\"BULBUL\",\"JAY\",\"MAGPIE\",\"CHICKADEE\",\"WATER OUZEL\",\"KITE\",\"BALD EAGLE\",\"VULTURE\",\"GREAT GREY OWL\",\"FIRE SALAMANDER\",\"NEWT\",\"EFT\",\"SPOTTED SALAMANDER\",\"AXOLOTL\",\"BULL FROG\",\"TREE FROG\",\"TAILED FROG\",\"LOGGERHEAD\",\"LEATHERBACK TURTLE\",\"MUD TURTLE\",\"TERRAPIN\",\"BOX TURTLE\",\"BANDED GECKO\",\"COMMON IGUANA\",\"AMERICAN CHAMELEON\",\"WHIPTAIL\",\"AGAMA\",\"FRILLED LIZARD\",\"ALLIGATOR LIZARD\",\"GILA MONSTER\",\"GREEN LIZARD\",\"AFRICAN CHAMELEON\",\"KOMODO DRAGON\",\"AFRICAN CROCODILE\",\"AMERICAN ALLIGATOR\",\"TRICERATOPS\",\"THUNDER SNAKE\",\"RINGNECK SNAKE\",\"HOGNOSE SNAKE\",\"GREEN SNAKE\",\"KING SNAKE\",\"GARTER SNAKE\",\"WATER SNAKE\",\"VINE SNAKE\",\"NIGHT SNAKE\",\"BOA\",\"ROCK PYTHON\",\"COBRA\",\"GREEN MAMBA\",\"SEA SNAKE\",\"HORNED VIPER\",\"DIAMONDBACK\",\"SIDEWINDER\",\"TRILOBITE\",\"HARVESTMAN\",\"SCORPION\",\"GARDEN SPIDER\",\"BARN SPIDER\",\"GARDEN SPIDER\",\"BLACK WIDOW\",\"TARANTULA\",\"WOLF SPIDER\",\"TICK\",\"CENTIPEDE\",\"GROUSE\",\"PTARMIGAN\",\"RUFFED GROUSE\",\"PRAIRIE CHICKEN\",\"PEACOCK\",\"QUAIL\",\"PARTRIDGE\",\"AFRICAN GREY\",\"MACAW\",\"COCKATOO\",\"LORIKEET\",\"COUCAL\",\"BEE EATER\",\"HORNBILL\",\"HUMMINGBIRD\",\"JACAMAR\",\"TOUCAN\",\"DRAKE\",\"MERGANSER\",\"GOOSE\",\"BLACK SWAN\",\"TUSKER\",\"ECHIDNA\",\"PLATYPUS\",\"WALLABY\",\"KOALA\",\"WOMBAT\",\"JELLYFISH\",\"SEA ANEMONE\",\"BRAIN CORAL\",\"FLATWORM\",\"NEMATODE\",\"CONCH\",\"SNAIL\",\"SLUG\",\"SEA SLUG\",\"CHITON\",\"CHAMBERED NAUTILUS\",\"DUNGENESS CRAB\",\"ROCK CRAB\",\"FIDDLER CRAB\",\"KING CRAB\",\"AMERICAN LOBSTER\",\"SPINY LOBSTER\",\"CRAYFISH\",\"HERMIT CRAB\",\"ISOPOD\",\"WHITE STORK\",\"BLACK STORK\",\"SPOONBILL\",\"FLAMINGO\",\"LITTLE BLUE HERON\",\"AMERICAN EGRET\",\"BITTERN\",\"CRANE\",\"LIMPKIN\",\"EUROPEAN GALLINULE\",\"AMERICAN COOT\",\"BUSTARD\",\"RUDDY TURNSTONE\",\"RED-BACKED SANDPIPER\",\"REDSHANK\",\"DOWITCHER\",\"OYSTERCATCHER\",\"PELICAN\",\"KING PENGUIN\",\"ALBATROSS\",\"GREY WHALE\",\"KILLER WHALE\",\"DUGONG\",\"SEA LION\",\"CHIHUAHUA\",\"JAPANESE SPANIEL\",\"MALTESE DOG\",\"PEKINESE\",\"SHIH-TZU\",\"BLENHEIM SPANIEL\",\"PAPILLON\",\"TOY TERRIER\",\"RHODESIAN RIDGEBACK\",\"AFGHAN HOUND\",\"BASSET\",\"BEAGLE\",\"BLOODHOUND\",\"BLUETICK\",\"COONHOUND\",\"WALKER HOUND\",\"ENGLISH FOXHOUND\",\"REDBONE\",\"BORZOI\",\"IRISH WOLFHOUND\",\"ITALIAN GREYHOUND\",\"WHIPPET\",\"IBIZAN HOUND\",\"NORWEGIAN ELKHOUND\",\"OTTERHOUND\",\"SALUKI\",\"SCOTTISH DEERHOUND\",\"WEIMARANER\",\"STAFFORDSHIRE BULLTERRIER\",\"STAFFORDSHIRE TERRIER\",\"BEDLINGTON TERRIER\",\"BORDER TERRIER\",\"KERRY BLUE TERRIER\",\"IRISH TERRIER\",\"NORFOLK TERRIER\",\"NORWICH TERRIER\",\"YORKSHIRE TERRIER\",\"WIRE-HAIRED FOX TERRIER\",\"LAKELAND TERRIER\",\"SEALYHAM TERRIER\",\"AIREDALE\",\"CAIRN\",\"AUSTRALIAN TERRIER\",\"DANDIE DINMONT\",\"BOSTON BULL\",\"MINIATURE SCHNAUZER\",\"GIANT SCHNAUZER\",\"STANDARD SCHNAUZER\",\"SCOTCH TERRIER\",\"TIBETAN TERRIER\",\"SILKY TERRIER\",\"WHEATEN TERRIER\",\"WHITE TERRIER\",\"LHASA\",\"RETRIEVER\",\"CURLY-COATED RETRIEVER\",\"GOLDEN RETRIEVER\",\"LABRADOR RETRIEVER\",\"CHESAPEAKE BAY RETRIEVER\",\"SHORT-HAIRED POINTER\",\"VISLA\",\"ENGLISH SETTER\",\"IRISH SETTER\",\"GORDON SETTER\",\"BRITTANY SPANIEL\",\"CLUMBER\",\"ENGLISH SPRINGER\",\"WELSH SPRINGER SPANIEL\",\"COCKER SPANIEL\",\"SUSSEX SPANIEL\",\"IRISH WATERSPANIEL\",\"KUVASZ\",\"SCHIPPERKE\",\"GROENENDAEL\",\"MALINOIS\",\"BRIARD\",\"KELPIE\",\"KOMONDOR\",\"OLD ENGLISH SHEEPDOG\",\"SHETLAND SHEEPDOG\",\"COLLIE\",\"BORDER COLLIE\",\"BOUVIER DES FLANDRES\",\"ROTTWEILER\",\"GERMAN SHEPHERD\",\"DOBERMAN\",\"MINIATURE PINSCHER\",\"GREATER SWISS MOUNTAIN DOG\",\"BERNESE MOUNTAIN DOG\",\"APPENZELLER\",\"ENTLEBUCHER\",\"BOXER\",\"BULL MASTIFF\",\"TIBETAN MASTIFF\",\"FRENCH BULLDOG\",\"GREAT DANE\",\"SAINT BERNARD\",\"ESKIMO DOG\",\"MALAMUTE\",\"SIBERIAN HUSKY\",\"DALMATIAN\",\"AFFENPINSCHER\",\"BASENJI\",\"PUG\",\"LEONBERG\",\"NEWFOUNDLAND\",\"GREAT PYRENEES\",\"SAMOYED\",\"POMERANIAN\",\"CHOW\",\"KEESHOND\",\"BRABANCON GRIFFON\",\"PEMBROKE\",\"CARDIGAN\",\"TOY POODLE\",\"MINIATURE POODLE\",\"STANDARD POODLE\",\"MEXICAN HAIRLESS\",\"TIMBER WOLF\",\"WHITE WOLF\",\"RED WOLF\",\"COYOTE\",\"DINGO\",\"DHOLE\",\"AFRICAN HUNTING DOG\",\"HYENA\",\"RED FOX\",\"KIT FOX\",\"ARCTIC FOX\",\"GREY FOX\",\"TABBY\",\"TIGER CAT\",\"PERSIAN CAT\",\"SIAMESE CAT\",\"EGYPTIAN CAT\",\"COUGAR\",\"LYNX\",\"LEOPARD\",\"SNOW LEOPARD\",\"JAGUAR\",\"LION\",\"TIGER\",\"CHEETAH\",\"BROWN BEAR\",\"AMERICAN BLACK BEAR\",\"ICE BEAR\",\"SLOTH BEAR\",\"MONGOOSE\",\"MEERKAT\",\"TIGER BEETLE\",\"LADYBUG\",\"GROUND BEETLE\",\"LONG-HORNED BEETLE\",\"LEAF BEETLE\",\"DUNG BEETLE\",\"RHINOCEROS BEETLE\",\"WEEVIL\",\"FLY\",\"BEE\",\"ANT\",\"GRASSHOPPER\",\"CRICKET\",\"WALKING STICK\",\"COCKROACH\",\"MANTIS\",\"CICADA\",\"LEAFHOPPER\",\"LACEWING\",\"DRAGONFLY\",\"DAMSELFLY\",\"ADMIRAL\",\"RINGLET\",\"MONARCH\",\"CABBAGE BUTTERFLY\",\"SULPHUR BUTTERFLY\",\"LYCAENID\",\"STARFISH\",\"SEA URCHIN\",\"SEA CUCUMBER\",\"WOOD RABBIT\",\"HARE\",\"ANGORA\",\"HAMSTER\",\"PORCUPINE\",\"FOX SQUIRREL\",\"MARMOT\",\"BEAVER\",\"GUINEA PIG\",\"SORREL\",\"ZEBRA\",\"HOG\",\"WILD BOAR\",\"WARTHOG\",\"HIPPOPOTAMUS\",\"OX\",\"WATER BUFFALO\",\"BISON\",\"RAM\",\"BIGHORN\",\"IBEX\",\"HARTEBEEST\",\"IMPALA\",\"GAZELLE\",\"ARABIAN CAMEL\",\"LLAMA\",\"WEASEL\",\"MINK\",\"POLECAT\",\"BLACK-FOOTED FERRET\",\"OTTER\",\"SKUNK\",\"BADGER\",\"ARMADILLO\",\"THREE-TOED SLOTH\",\"ORANGUTAN\",\"GORILLA\",\"CHIMPANZEE\",\"GIBBON\",\"SIAMANG\",\"GUENON\",\"PATAS\",\"BABOON\",\"MACAQUE\",\"LANGUR\",\"COLOBUS\",\"PROBOSCIS MONKEY\",\"MARMOSET\",\"CAPUCHIN\",\"HOWLER MONKEY\",\"TITI\",\"SPIDER MONKEY\",\"SQUIRREL MONKEY\",\"MADAGASCAR CAT\",\"INDRI\",\"INDIAN ELEPHANT\",\"AFRICAN ELEPHANT\",\"LESSER PANDA\",\"GIANT PANDA\",\"BARRACOUTA\",\"EEL\",\"COHO\",\"ROCK BEAUTY\",\"ANEMONE FISH\",\"STURGEON\",\"GAR\",\"LIONFISH\",\"PUFFER\",\"ABACUS\",\"ABAYA\",\"ACADEMIC GOWN\",\"ACCORDION\",\"ACOUSTIC GUITAR\",\"AIRCRAFT CARRIER\",\"AIRLINER\",\"AIRSHIP\",\"ALTAR\",\"AMBULANCE\",\"AMPHIBIAN\",\"ANALOG CLOCK\",\"APIARY\",\"APRON\",\"ASHCAN\",\"ASSAULT RIFLE\",\"BACKPACK\",\"BAKERY\",\"BALANCE BEAM\",\"BALLOON\",\"BALLPOINT\",\"BAND AID\",\"BANJO\",\"BANNISTER\",\"BARBELL\",\"BARBER CHAIR\",\"BARBERSHOP\",\"BARN\",\"BAROMETER\",\"BARREL\",\"BARROW\",\"BASEBALL\",\"BASKETBALL\",\"BASSINET\",\"BASSOON\",\"BATHING CAP\",\"BATH TOWEL\",\"BATHTUB\",\"BEACH WAGON\",\"BEACON\",\"BEAKER\",\"BEARSKIN\",\"BEER BOTTLE\",\"BEER GLASS\",\"BELL COTE\",\"BIB\",\"BICYCLE-BUILT-FOR-TWO\",\"BIKINI\",\"BINDER\",\"BINOCULARS\",\"BIRDHOUSE\",\"BOATHOUSE\",\"BOBSLED\",\"BOLO TIE\",\"BONNET\",\"BOOKCASE\",\"BOOKSHOP\",\"BOTTLECAP\",\"BOW\",\"BOW TIE\",\"BRASS\",\"BRASSIERE\",\"BREAKWATER\",\"BREASTPLATE\",\"BROOM\",\"BUCKET\",\"BUCKLE\",\"BULLETPROOF VEST\",\"BULLET TRAIN\",\"BUTCHER SHOP\",\"CAB\",\"CALDRON\",\"CANDLE\",\"CANNON\",\"CANOE\",\"CAN OPENER\",\"CARDIGAN\",\"CAR MIRROR\",\"CAROUSEL\",\"CARPENTERS KIT\",\"CARTON\",\"CAR WHEEL\",\"CASH MACHINE\",\"CASSETTE\",\"CASSETTE PLAYER\",\"CASTLE\",\"CATAMARAN\",\"CD PLAYER\",\"CELLO\",\"CELLULAR TELEPHONE\",\"CHAIN\",\"CHAINLINK FENCE\",\"CHAIN MAIL\",\"CHAIN SAW\",\"CHEST\",\"CHIFFONIER\",\"CHIME\",\"CHINA CABINET\",\"CHRISTMAS STOCKING\",\"CHURCH\",\"CINEMA\",\"CLEAVER\",\"CLIFF DWELLING\",\"CLOAK\",\"CLOG\",\"COCKTAIL SHAKER\",\"COFFEE MUG\",\"COFFEEPOT\",\"COIL\",\"COMBINATION LOCK\",\"COMPUTER KEYBOARD\",\"CONFECTIONERY\",\"CONTAINER SHIP\",\"CONVERTIBLE\",\"CORKSCREW\",\"CORNET\",\"COWBOY BOOT\",\"COWBOY HAT\",\"CRADLE\",\"CRANE\",\"CRASH HELMET\",\"CRATE\",\"CRIB\",\"CROCK POT\",\"CROQUET BALL\",\"CRUTCH\",\"CUIRASS\",\"DAM\",\"DESK\",\"DESKTOP COMPUTER\",\"DIAL TELEPHONE\",\"DIAPER\",\"DIGITAL CLOCK\",\"DIGITAL WATCH\",\"DINING TABLE\",\"DISHRAG\",\"DISHWASHER\",\"DISK BRAKE\",\"DOCK\",\"DOGSLED\",\"DOME\",\"DOORMAT\",\"DRILLING PLATFORM\",\"DRUM\",\"DRUMSTICK\",\"DUMBBELL\",\"DUTCH OVEN\",\"ELECTRIC FAN\",\"ELECTRIC GUITAR\",\"ELECTRIC LOCOMOTIVE\",\"ENTERTAINMENT CENTER\",\"ENVELOPE\",\"ESPRESSO MAKER\",\"FACE POWDER\",\"FEATHER BOA\",\"FILE\",\"FIREBOAT\",\"FIRE ENGINE\",\"FIRE SCREEN\",\"FLAGPOLE\",\"FLUTE\",\"FOLDING CHAIR\",\"FOOTBALL HELMET\",\"FORKLIFT\",\"FOUNTAIN\",\"FOUNTAIN PEN\",\"FOUR-POSTER\",\"FREIGHT CAR\",\"FRENCH HORN\",\"FRYING PAN\",\"FUR COAT\",\"GARBAGE TRUCK\",\"GASMASK\",\"GAS PUMP\",\"GOBLET\",\"GO-KART\",\"GOLF BALL\",\"GOLFCART\",\"GONDOLA\",\"GONG\",\"GOWN\",\"GRAND PIANO\",\"GREENHOUSE\",\"GRILLE\",\"GROCERY STORE\",\"GUILLOTINE\",\"HAIR SLIDE\",\"HAIR SPRAY\",\"HALF TRACK\",\"HAMMER\",\"HAMPER\",\"HAND BLOWER\",\"HAND-HELD COMPUTER\",\"HANDKERCHIEF\",\"HARD DISC\",\"HARMONICA\",\"HARP\",\"HARVESTER\",\"HATCHET\",\"HOLSTER\",\"HOME THEATER\",\"HONEYCOMB\",\"HOOK\",\"HOOPSKIRT\",\"HORIZONTAL BAR\",\"HORSE CART\",\"HOURGLASS\",\"IPOD\",\"IRON\",\"JACK-O-LANTERN\",\"JEAN\",\"JEEP\",\"JERSEY\",\"JIGSAW PUZZLE\",\"JINRIKISHA\",\"JOYSTICK\",\"KIMONO\",\"KNEE PAD\",\"KNOT\",\"LAB COAT\",\"LADLE\",\"LAMPSHADE\",\"LAPTOP\",\"LAWN MOWER\",\"LENS CAP\",\"LETTER OPENER\",\"LIBRARY\",\"LIFEBOAT\",\"LIGHTER\",\"LIMOUSINE\",\"LINER\",\"LIPSTICK\",\"LOAFER\",\"LOTION\",\"LOUDSPEAKER\",\"LOUPE\",\"LUMBERMILL\",\"MAGNETIC COMPASS\",\"MAILBAG\",\"MAILBOX\",\"MAILLOT\",\"MAILLOT\",\"MANHOLE COVER\",\"MARACA\",\"MARIMBA\",\"MASK\",\"MATCHSTICK\",\"MAYPOLE\",\"MAZE\",\"MEASURING CUP\",\"MEDICINE CHEST\",\"MEGALITH\",\"MICROPHONE\",\"MICROWAVE\",\"MILITARY UNIFORM\",\"MILK CAN\",\"MINIBUS\",\"MINISKIRT\",\"MINIVAN\",\"MISSILE\",\"MITTEN\",\"MIXING BOWL\",\"MOBILE HOME\",\"MODEL T\",\"MODEM\",\"MONASTERY\",\"MONITOR\",\"MOPED\",\"MORTAR\",\"MORTARBOARD\",\"MOSQUE\",\"MOSQUITO NET\",\"MOTOR SCOOTER\",\"MOUNTAIN BIKE\",\"MOUNTAIN TENT\",\"MOUSE\",\"MOUSETRAP\",\"MOVING VAN\",\"MUZZLE\",\"NAIL\",\"NECK BRACE\",\"NECKLACE\",\"NIPPLE\",\"NOTEBOOK\",\"OBELISK\",\"OBOE\",\"OCARINA\",\"ODOMETER\",\"OIL FILTER\",\"ORGAN\",\"OSCILLOSCOPE\",\"OVERSKIRT\",\"OXCART\",\"OXYGEN MASK\",\"PACKET\",\"PADDLE\",\"PADDLEWHEEL\",\"PADLOCK\",\"PAINTBRUSH\",\"PAJAMA\",\"PALACE\",\"PANPIPE\",\"PAPER TOWEL\",\"PARACHUTE\",\"PARALLEL BARS\",\"PARK BENCH\",\"PARKING METER\",\"PASSENGER CAR\",\"PATIO\",\"PAY-PHONE\",\"PEDESTAL\",\"PENCIL BOX\",\"PENCIL SHARPENER\",\"PERFUME\",\"PETRI DISH\",\"PHOTOCOPIER\",\"PICK\",\"PICKELHAUBE\",\"PICKET FENCE\",\"PICKUP\",\"PIER\",\"PIGGY BANK\",\"PILL BOTTLE\",\"PILLOW\",\"PING-PONG BALL\",\"PINWHEEL\",\"PIRATE\",\"PITCHER\",\"PLANE\",\"PLANETARIUM\",\"PLASTIC BAG\",\"PLATE RACK\",\"PLOW\",\"PLUNGER\",\"POLAROID CAMERA\",\"POLE\",\"POLICE VAN\",\"PONCHO\",\"POOL TABLE\",\"POP BOTTLE\",\"POT\",\"POTTERS WHEEL\",\"POWER DRILL\",\"PRAYER RUG\",\"PRINTER\",\"PRISON\",\"PROJECTILE\",\"PROJECTOR\",\"PUCK\",\"PUNCHING BAG\",\"PURSE\",\"QUILL\",\"QUILT\",\"RACER\",\"RACKET\",\"RADIATOR\",\"RADIO\",\"RADIO TELESCOPE\",\"RAIN BARREL\",\"RECREATIONAL VEHICLE\",\"REEL\",\"REFLEX CAMERA\",\"REFRIGERATOR\",\"REMOTE CONTROL\",\"RESTAURANT\",\"REVOLVER\",\"RIFLE\",\"ROCKING CHAIR\",\"ROTISSERIE\",\"RUBBER ERASER\",\"RUGBY BALL\",\"RULE\",\"RUNNING SHOE\",\"SAFE\",\"SAFETY PIN\",\"SALTSHAKER\",\"SANDAL\",\"SARONG\",\"SAX\",\"SCABBARD\",\"SCALE\",\"SCHOOL BUS\",\"SCHOONER\",\"SCOREBOARD\",\"SCREEN\",\"SCREW\",\"SCREWDRIVER\",\"SEAT BELT\",\"SEWING MACHINE\",\"SHIELD\",\"SHOE SHOP\",\"SHOJI\",\"SHOPPING BASKET\",\"SHOPPING CART\",\"SHOVEL\",\"SHOWER CAP\",\"SHOWER CURTAIN\",\"SKI\",\"SKI MASK\",\"SLEEPING BAG\",\"SLIDE RULE\",\"SLIDING DOOR\",\"SLOT\",\"SNORKEL\",\"SNOWMOBILE\",\"SNOWPLOW\",\"SOAP DISPENSER\",\"SOCCER BALL\",\"SOCK\",\"SOLAR DISH\",\"SOMBRERO\",\"SOUP BOWL\",\"SPACE BAR\",\"SPACE HEATER\",\"SPACE SHUTTLE\",\"SPATULA\",\"SPEEDBOAT\",\"SPIDER WEB\",\"SPINDLE\",\"SPORTS CAR\",\"SPOTLIGHT\",\"STAGE\",\"STEAM LOCOMOTIVE\",\"STEEL ARCH BRIDGE\",\"STEEL DRUM\",\"STETHOSCOPE\",\"STOLE\",\"STONE WALL\",\"STOPWATCH\",\"STOVE\",\"STRAINER\",\"STREETCAR\",\"STRETCHER\",\"STUDIO COUCH\",\"STUPA\",\"SUBMARINE\",\"SUIT\",\"SUNDIAL\",\"SUNGLASS\",\"SUNGLASSES\",\"SUNSCREEN\",\"SUSPENSION BRIDGE\",\"SWAB\",\"SWEATSHIRT\",\"SWIMMING TRUNKS\",\"SWING\",\"SWITCH\",\"SYRINGE\",\"TABLE LAMP\",\"TANK\",\"TAPE PLAYER\",\"TEAPOT\",\"TEDDY\",\"TELEVISION\",\"TENNIS BALL\",\"THATCH\",\"THEATER CURTAIN\",\"THIMBLE\",\"THRESHER\",\"THRONE\",\"TILE ROOF\",\"TOASTER\",\"TOBACCO SHOP\",\"TOILET SEAT\",\"TORCH\",\"TOTEM POLE\",\"TOW TRUCK\",\"TOYSHOP\",\"TRACTOR\",\"TRAILER TRUCK\",\"TRAY\",\"TRENCH COAT\",\"TRICYCLE\",\"TRIMARAN\",\"TRIPOD\",\"TRIUMPHAL ARCH\",\"TROLLEYBUS\",\"TROMBONE\",\"TUB\",\"TURNSTILE\",\"TYPEWRITER KEYBOARD\",\"UMBRELLA\",\"UNICYCLE\",\"UPRIGHT\",\"VACUUM\",\"VASE\",\"VAULT\",\"VELVET\",\"VENDING MACHINE\",\"VESTMENT\",\"VIADUCT\",\"VIOLIN\",\"VOLLEYBALL\",\"WAFFLE IRON\",\"WALL CLOCK\",\"WALLET\",\"WARDROBE\",\"WARPLANE\",\"WASHBASIN\",\"WASHER\",\"WATER BOTTLE\",\"WATER JUG\",\"WATER TOWER\",\"WHISKEY JUG\",\"WHISTLE\",\"WIG\",\"WINDOW SCREEN\",\"WINDOW SHADE\",\"WINDSOR TIE\",\"WINE BOTTLE\",\"WING\",\"WOK\",\"WOODEN SPOON\",\"WOOL\",\"WORM FENCE\",\"WRECK\",\"YAWL\",\"YURT\",\"WEB SITE\",\"COMIC BOOK\",\"CROSSWORD PUZZLE\",\"STREET SIGN\",\"TRAFFIC LIGHT\",\"BOOK JACKET\",\"MENU\",\"PLATE\",\"GUACAMOLE\",\"CONSOMME\",\"HOT POT\",\"TRIFLE\",\"ICE CREAM\",\"ICE LOLLY\",\"FRENCH LOAF\",\"BAGEL\",\"PRETZEL\",\"CHEESEBURGER\",\"HOTDOG\",\"MASHED POTATO\",\"HEAD CABBAGE\",\"BROCCOLI\",\"CAULIFLOWER\",\"ZUCCHINI\",\"SPAGHETTI SQUASH\",\"ACORN SQUASH\",\"BUTTERNUT SQUASH\",\"CUCUMBER\",\"ARTICHOKE\",\"BELL PEPPER\",\"CARDOON\",\"MUSHROOM\",\"GRANNY SMITH\",\"STRAWBERRY\",\"ORANGE\",\"LEMON\",\"FIG\",\"PINEAPPLE\",\"BANANA\",\"JACKFRUIT\",\"CUSTARD APPLE\",\"POMEGRANATE\",\"HAY\",\"CARBONARA\",\"CHOCOLATE SAUCE\",\"DOUGH\",\"MEAT LOAF\",\"PIZZA\",\"POTPIE\",\"BURRITO\",\"RED WINE\",\"ESPRESSO\",\"CUP\",\"EGGNOG\",\"ALP\",\"BUBBLE\",\"CLIFF\",\"CORAL REEF\",\"GEYSER\",\"LAKESIDE\",\"PROMONTORY\",\"SANDBAR\",\"SEASHORE\",\"VALLEY\",\"VOLCANO\",\"BALLPLAYER\",\"GROOM\",\"SCUBA DIVER\",\"RAPESEED\",\"DAISY\",\"LADY SLIPPER\",\"CORN\",\"ACORN\",\"HIP\",\"BUCKEYE\",\"CORAL FUNGUS\",\"AGARIC\",\"GYROMITRA\",\"STINKHORN\",\"EARTHSTAR\",\"HEN-OF-THE-WOODS\",\"BOLETE\",\"EAR\",\"TOILET TISSUE\"];class S{inputs;postProcessedOutputs}class g{inputs;postProcessedOutputs}class N{inputs;postProcessedOutputs}class L{inputs;postProcessedOutputs}class h{inputs;postProcessedOutputs}class P{inputs;postProcessedOutputs}class C{inputs;postProcessedOutputs}class d{inputs;postProcessedOutputs}class B{inputs;postProcessedOutputs}class H{inputs;postProcessedOutputs}class U{inputs;postProcessedOutputs}const f={bare:\"{{! https://huggingface.co/TheBloke/deepseek-coder-6.7B-base-AWQ }}{{#messages}}{{#user}}{{#countUser1}}{{#lastSystem}}{{{lastSystem}}} {{/lastSystem}}{{/countUser1}}{{{content}}}{{/user}}{{#assistant}} {{{content}}} {{/assistant}}{{/messages}}\",chatml:\"{{! https://huggingface.co/TheBloke/OpenHermes-2.5-Mistral-7B-AWQ#prompt-template-chatml }}{{#messages}}{{#system}}<|im_start|>system\\n{{{content}}}<|im_end|>\\n{{/system}}{{#user}}<|im_start|>user\\n{{{content}}}<|im_end|>\\n{{/user}}{{#assistant}}<|im_start|>assistant\\n{{{content}}}<|im_end|>\\n{{/assistant}}{{/messages}}<|im_start|>assistant\\n\",deepseek:\"{{! https://huggingface.co/TheBloke/deepseek-coder-6.7B-instruct-AWQ }}{{#messages}}{{#system}}{{{content}}}\\n{{/system}}{{#user}}### Instruction:\\n{{{content}}}\\n{{/user}}{{#assistant}}### Response:\\n{{{content}}}\\n{{/assistant}}\\n{{/messages}}\\n### Response:\\n\",falcon:\"{{! https://huggingface.co/TheBloke/Falcon-7B-Instruct-GPTQ }}{{#messages}}{{#system}}{{{content}}}\\n{{/system}}{{#user}}User: {{{content}}}\\n{{/user}}{{#assistant}}Assistant: {{{content}}}\\n{{/assistant}}{{/messages}}\\nAssistant: \\n{{}}\",gemma:\"{{! https://ai.google.dev/gemma/docs/formatting https://huggingface.co/google/gemma-7b-it }}{{#messages}}{{#user}}<start_of_turn>user\\n{{{content}}}<end_of_turn>\\n{{/user}}{{#assistant}}<start_of_turn>model\\n{{{content}}}<end_of_turn>\\n{{/assistant}}{{/messages}}<start_of_turn>model\\n\",\"hermes2-pro\":\"{{! https://huggingface.co/NousResearch/Hermes-2-Pro-Mistral-7B#prompt-format-for-function-calling }}{{#messages}}{{#system}}<|im_start|>system\\n{{{content}}}<|im_end|>\\n{{/system}}{{#user}}<|im_start|>user\\n{{{content}}}<|im_end|>\\n{{/user}}{{#assistant}}<|im_start|>assistant\\n{{{content}}}<|im_end|>\\n{{/assistant}}{{#tool_query}}<|im_start|>assistant\\n<tool_call>\\n{{{content}}}</tool_call><|im_end|>\\n{{/tool_query}}{{#tool_response}}<|im_start|>tool\\n<tool_response>\\n{{{content}}}</tool_response>\\n<|im_end|>\\n{{/tool_response}}{{/messages}}<|im_start|>assistant\\n\",inst:\"{{! https://huggingface.co/TheBloke/LlamaGuard-7B-AWQ }}{{#messages}}{{#user}}[INST] {{#countUser1}}{{#lastSystem}}{{{lastSystem}}} {{/lastSystem}}{{/countUser1}}{{{content}}} [/INST]{{/user}}{{#assistant}} {{{content}}} {{/assistant}}{{/messages}}\",llama2:\"{{! https://huggingface.co/TheBloke/Llama-2-13B-chat-AWQ#prompt-template-llama-2-chat }}{{#messages}}{{#system}}[INST] <<SYS>>\\n{{{content}}}\\n<</SYS>>\\n\\n{{/system}}{{#user}}{{^beforewasSystem}}<s>[INST] {{/beforewasSystem}}{{{content}}} [/INST]{{/user}}{{#assistant}} {{{content}}}</s>{{/assistant}}{{/messages}}\",llama3:\"{{! https://llama.meta.com/docs/model-cards-and-prompt-formats/meta-llama-3/ }}<|begin_of_text|>{{#messages}}{{#system}}{{#countSystem1}}<|start_header_id|>system<|end_header_id|>\\n\\n{{{content}}}<|eot_id|>{{/countSystem1}}{{/system}}{{#user}}<|start_header_id|>user<|end_header_id|>\\n\\n{{{content}}}<|eot_id|>{{/user}}{{#assistant}}<|start_header_id|>assistant<|end_header_id|>\\n\\n{{{content}}}<|eot_id|>{{/assistant}}{{/messages}}<|start_header_id|>assistant<|end_header_id|>\\n\\n\",llava:\"{{! https://huggingface.co/llava-hf/llava-1.5-7b-hf }}{{#messages}}{{#user}}{{#countUser1}}USER: {{{content}}}\\n{{/countUser1}}{{/user}}{{/messages}}ASSISTANT:\",\"mistral-instruct\":\"{{! https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.1-AWQ#prompt-template-mistral }}{{#messages}}{{#system}}<s>[INST] {{{content}}} {{/system}}{{#user}}{{^beforewasSystem}}[INST] {{/beforewasSystem}}{{{content}}} [/INST]{{/user}}{{#assistant}} {{{content}}}</s>{{/assistant}}{{/messages}}\",\"openchat-alt\":\"{{#messages}}{{#user}}<s>Human: {{#countUser1}}{{#lastSystem}}{{{lastSystem}}} {{/lastSystem}}{{/countUser1}}{{{content}}}<|end_of_turn|>{{/user}}{{#assistant}}Assistant: {{{content}}}<|end_of_turn|>{{/assistant}}{{/messages}}Assistant: {{}}\",openchat:\"{{! https://huggingface.co/TheBloke/openchat_3.5-AWQ#prompt-template-openchat }}{{#messages}}{{#user}}GPT4 User: {{#countUser1}}{{#lastSystem}}{{{lastSystem}}} {{/lastSystem}}{{/countUser1}}{{{content}}}<|end_of_turn|>{{/user}}{{#assistant}}GPT4 Assistant: {{{content}}}<|end_of_turn|>{{/assistant}}{{/messages}}GPT4 Assistant:\",\"orca-hashes\":\"{{! https://huggingface.co/TheBloke/neural-chat-7B-v3-1-AWQ#prompt-template-orca-hashes }}{{#messages}}{{#system}}### System:\\n{{{content}}}\\n\\n{{/system}}{{#user}}### User:\\n{{{content}}}\\n\\n{{/user}}{{#assistant}}### Assistant:\\n{{{content}}}\\n\\n{{/assistant}}{{/messages}}### Assistant:\\n\\n\",\"phi-2\":\"{{! https://www.promptingguide.ai/models/phi-2 }}{{#messages}}{{#user}}User: {{{content}}}\\n{{/user}}{{#assistant}}Assistant:{{{content}}}\\n{{/assistant}}{{#question}}Instruct: {{{ content }}}\\nOutput: {{/question}}{{/messages}}\",sqlcoder:\"### Task\\nGenerate a SQL query to answer [QUESTION]{{{lastUser}}}[/QUESTION]\\n\\n### Database Schema\\nThe query will run on a database with the following schema:\\n{{{lastSystem}}}\\n\\n### Answer\\nGiven the database schema, here is the SQL query that [QUESTION]{{{lastUser}}}[/QUESTION]\\n[SQL]\",starling:\"{{#messages}}{{#user}}GPT4 Correct User: {{#countUser1}}{{#lastSystem}}{{{lastSystem}}} {{/lastSystem}}{{/countUser1}}{{{content}}}<|end_of_turn|>{{/user}}{{#assistant}}GPT4 Correct Assistant: {{{content}}}<|end_of_turn|>{{/assistant}}{{#code_user}}Code User: {{{content}}}<|end_of_turn|>{{/code_user}}{{#code_assistant}}Code Assistant: {{{content}}}<|end_of_turn|>{{/code_assistant}}{{/messages}}GPT4 Correct Assistant:\",tinyllama:\"{{! https://huggingface.co/TinyLlama/TinyLlama-1.1B-Chat-v1.0 }}{{#messages}}{{#system}}<|system|>\\n{{{content}}}</s>\\n{{/system}}{{#user}}<|user|>\\n{{{content}}}</s>\\n{{/user}}{{#assistant}}<|assistant|>\\n{{{content}}}</s>\\n{{/assistant}}{{/messages}}<|assistant|>\\n\",zephyr:\"{{! https://huggingface.co/TheBloke/zephyr-7B-beta-AWQ#prompt-template-zephyr https://huggingface.co/HuggingFaceH4/zephyr-7b-alpha }}{{#messages}}{{#system}}<s><|system|>\\n{{{content}}}</s>\\n{{/system}}{{#user}}<|user|>\\n{{{content}}}</s>\\n{{/user}}{{#assistant}}<|assistant|>\\n{{{content}}}</s>\\n{{/assistant}}{{/messages}}<|assistant|>\\n\"},D=t.default.parse,y=t.default.render,G=(e,t)=>{if(e&&t){const s=D(t);return y(t,((e,t)=>{const s=M(e),n={},r={other:0},a={messages:[]};let o=[];for(const e of t){const t=s.includes(e.role)?e.role:\"other\",i={};r[e.role]||(r[e.role]=0),r[t]++,i[`count${t.charAt(0).toUpperCase()+t.slice(1)}${r[t]}`]=!0,e.role!==t&&(r[e.role]++,i[`count${e.role.charAt(0).toUpperCase()+e.role.slice(1)}${r[e.role]}`]=!0),i[t]=!0,e.role!==t&&(i[e.role]=!0);for(const e of o)i[`beforewas${e.charAt(0).toUpperCase()+e.slice(1)}`]=!0;i.content=e.content;for(const e of Object.keys(n))i[`last${e.charAt(0).toUpperCase()+e.slice(1)}`]=n[e];a[`last${t.charAt(0).toUpperCase()+t.slice(1)}`]=e.content,o=[t],n[t]=e.content,e.role!==t&&(a[`last${e.role.charAt(0).toUpperCase()+e.role.slice(1)}`]=e.content,n[e.role]=e.content,o=[t,e.role]),a.messages.push(i)}return a})(s,e))}return\"\"},M=e=>{const t=e.filter((e=>\"#\"===e[0]&&\"messages\"===e[1]));return t.length>0?t[0][4].filter((e=>\"#\"===e[0]||\"^\"===e[0])).map((e=>e[1])):[]},b=(e,t)=>void 0===e.messages?1==e.raw||null==t.defaultPromptMessages?e.prompt:G(t.defaultPromptMessages(t.defaultContext,e.prompt),t.promptTemplateRaw||f[t.promptTemplate]):G(e.messages,t.promptTemplateRaw||f[t.promptTemplate]);TransformStream;TransformStream;const F={\"text-classification\":{models:[\"@cf/huggingface/distilbert-sst-2-int8\",\"@cf/jpmorganchase/roberta-spam\",\"@cf/inml/inml-roberta-dga\"],class:class extends C{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",properties:{text:{type:\"string\",minLength:1}},required:[\"text\"]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"object\",properties:{score:{type:\"number\"},label:{type:\"string\"}}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.String,[e.text],{shape:[1],name:\"input_text\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs=[{label:\"NEGATIVE\",score:e.logits.value[0][0]},{label:\"POSITIVE\",score:e.logits.value[0][1]}]}},baseClass:C},\"text-to-image\":{models:[\"@cf/stabilityai/stable-diffusion-xl-base-1.0\",\"@cf/stabilityai/stable-diffusion-xl-turbo\",\"@cf/runwayml/stable-diffusion-v1-5-inpainting\",\"@cf/runwayml/stable-diffusion-v1-5-img2img\",\"@cf/lykon/dreamshaper-8-lcm\",\"@cf/bytedance/stable-diffusion-xl-lightning\"],class:class extends H{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",properties:{prompt:{type:\"string\",minLength:1},image:{type:\"array\",items:{type:\"number\"}},mask:{type:\"array\",items:{type:\"number\"}},num_steps:{type:\"integer\",default:20,maximum:20},strength:{type:\"number\",default:1},guidance:{type:\"number\",default:7.5}},required:[\"prompt\"]},output:{type:\"string\",contentType:\"image/png\",format:\"binary\"}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){if(this.modelSettings.generateTensorsFunc)return this.modelSettings.generateTensorsFunc(e);{let t=[new p(s.String,[e.prompt],{shape:[1],name:\"input_text\"}),new p(s.Int32,[e.num_steps||this.schema.input.properties.num_steps.default],{shape:[1],name:\"num_steps\"})];return e.image&&(t=[...t,new p(s.String,[\"\"],{shape:[1],name:\"negative_prompt\"}),new p(s.Float32,[e.strength||this.schema.input.properties.strength.default],{shape:[1],name:\"strength\"}),new p(s.Float32,[e.guidance||this.schema.input.properties.guidance.default],{shape:[1],name:\"guidance\"}),new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"image\"})]),e.mask&&(t=[...t,new p(s.Uint8,e.mask,{shape:[1,e.mask.length],name:\"mask_image\"})]),t}}OldgenerateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):e.image&&e.mask?[new p(s.String,[e.prompt],{shape:[1],name:\"input_text\"}),new p(s.String,[\"\"],{shape:[1],name:\"negative_prompt\"}),new p(s.Int32,[e.num_steps||20],{shape:[1],name:\"num_steps\"}),new p(s.Float32,[e.strength||1],{shape:[1],name:\"strength\"}),new p(s.Float32,[e.guidance||7.5],{shape:[1],name:\"guidance\"}),new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"image\"}),new p(s.Uint8,e.mask,{shape:[1,e.mask.length],name:\"mask_image\"})]:e.image?[new p(s.String,[e.prompt],{shape:[1],name:\"input_text\"}),new p(s.String,[\"\"],{shape:[1],name:\"negative_prompt\"}),new p(s.Float32,[e.strength||1],{shape:[1],name:\"strength\"}),new p(s.Float32,[e.guidance||7.5],{shape:[1],name:\"guidance\"}),new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"image\"}),new p(s.Int32,[e.num_steps||20],{shape:[1],name:\"num_steps\"})]:[new p(s.String,[e.prompt],{shape:[1],name:\"input_text\"}),new p(s.Int32,[e.num_steps||20],{shape:[1],name:\"num_steps\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs=new Uint8Array(e.output_image.value)}},baseClass:H},\"sentence-similarity\":{models:[\"@hf/sentence-transformers/all-minilm-l6-v2\"],class:class extends L{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",properties:{source:{type:\"string\",minLength:1},sentences:{type:\"array\",items:{type:\"string\",minLength:1}}},required:[\"source\",\"sentences\"]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"number\"}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.String,[e.source],{shape:[1],name:\"source_sentence\"}),new p(s.String,e.sentences,{shape:[e.sentences.length],name:\"sentences\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs=e.scores.value}},baseClass:L},\"text-embeddings\":{models:[\"@cf/baai/bge-small-en-v1.5\",\"@cf/baai/bge-base-en-v1.5\",\"@cf/baai/bge-large-en-v1.5\"],class:class extends d{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",properties:{text:{oneOf:[{type:\"string\",minLength:1},{type:\"array\",items:{type:\"string\",minLength:1},maxItems:100}]}},required:[\"text\"]},output:{type:\"object\",contentType:\"application/json\",properties:{shape:{type:\"array\",items:{type:\"number\"}},data:{type:\"array\",items:{type:\"array\",items:{type:\"number\"}}}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.String,Array.isArray(e.text)?e.text:[e.text],{shape:[Array.isArray(e.text)?e.text.length:[e.text].length],name:\"input_text\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs={shape:e.embeddings.shape,data:e.embeddings.value}}},baseClass:d},\"speech-recognition\":{models:[\"@cf/openai/whisper\",\"@cf/openai/whisper-tiny-en\",\"@cf/openai/whisper-sherpa\"],class:class extends h{modelSettings;preProcessedInputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{audio:{type:\"array\",items:{type:\"number\"}}},required:[\"audio\"]}]},output:{type:\"object\",contentType:\"application/json\",properties:{text:{type:\"string\"},word_count:{type:\"number\"},words:{type:\"array\",items:{type:\"object\",properties:{word:{type:\"string\"},start:{type:\"number\"},end:{type:\"number\"}}}},vtt:{type:\"string\"}},required:[\"text\"]}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.Uint8,e.audio,{shape:[1,e.audio.length],name:\"audio\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs={text:e.name.value[0].trim()}}},baseClass:h},\"image-classification\":{models:[\"@cf/microsoft/resnet-50\"],class:class extends S{modelSettings;preProcessedInputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{image:{type:\"array\",items:{type:\"number\"}}},required:[\"image\"]}]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"object\",properties:{score:{type:\"number\"},label:{type:\"string\"}}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"input\"})]}postProcessing(e){if(this.modelSettings.postProcessingFunc)this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs);else{const t=[],s=e.output.value[0];for(const e in s)t.push({label:T[e],score:s[e]});t.sort(((e,t)=>t.score-e.score)),this.postProcessedOutputs=t.slice(0,5)}}},baseClass:S},\"object-detection\":{models:[\"@cf/facebook/detr-resnet-50\"],class:class extends N{modelSettings;preProcessedInputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{image:{type:\"array\",items:{type:\"number\"}}}}]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"object\",properties:{score:{type:\"number\"},label:{type:\"string\"},box:{type:\"object\",properties:{xmin:{type:\"number\"},ymin:{type:\"number\"},xmax:{type:\"number\"},ymax:{type:\"number\"}}}}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"input\"})]}postProcessing(e){if(this.modelSettings.postProcessingFunc)this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs);else{const t=e.scores.value[0].map(((t,s)=>({score:t,label:e.name.value[e.labels.value[0][s]],box:{xmin:e.boxes.value[0][s][0],ymin:e.boxes.value[0][s][1],xmax:e.boxes.value[0][s][2],ymax:e.boxes.value[0][s][3]}})));this.postProcessedOutputs=t.sort(((e,t)=>t.score-e.score))}}},baseClass:N},\"text-generation\":{models:[\"@cf/meta/llama-3-8b-instruct\",\"@cf/meta/llama-2-7b-chat-int8\",\"@cf/mistral/mistral-7b-instruct-v0.1\",\"@cf/mistral/mistral-7b-instruct-v0.1-vllm\",\"@cf/mistral/mistral-7b-instruct-v0.2-lora\",\"@cf/meta/llama-2-7b-chat-fp16\",\"@hf/thebloke/llama-2-13b-chat-awq\",\"@hf/thebloke/zephyr-7b-beta-awq\",\"@hf/thebloke/mistral-7b-instruct-v0.1-awq\",\"@hf/thebloke/codellama-7b-instruct-awq\",\"@hf/thebloke/openchat_3.5-awq\",\"@hf/thebloke/openhermes-2.5-mistral-7b-awq\",\"@hf/thebloke/neural-chat-7b-v3-1-awq\",\"@hf/thebloke/llamaguard-7b-awq\",\"@hf/thebloke/deepseek-coder-6.7b-base-awq\",\"@hf/thebloke/deepseek-coder-6.7b-instruct-awq\",\"@hf/nousresearch/hermes-2-pro-mistral-7b\",\"@hf/mistral/mistral-7b-instruct-v0.2\",\"@cf/mistral/mixtral-8x7b-instruct-v0.1-awq\",\"@hf/google/gemma-7b-it\",\"@hf/nexusflow/starling-lm-7b-beta\",\"@cf/deepseek-ai/deepseek-math-7b-instruct\",\"@cf/defog/sqlcoder-7b-2\",\"@cf/openchat/openchat-3.5-0106\",\"@cf/tiiuae/falcon-7b-instruct\",\"@cf/thebloke/discolm-german-7b-v1-awq\",\"@cf/qwen/qwen1.5-0.5b-chat\",\"@cf/qwen/qwen1.5-1.8b-chat\",\"@cf/qwen/qwen1.5-7b-chat-awq\",\"@cf/qwen/qwen1.5-14b-chat-awq\",\"@cf/tinyllama/tinyllama-1.1b-chat-v1.0\",\"@cf/microsoft/phi-2\",\"@cf/google/gemma-2b-it-lora\",\"@cf/google/gemma-7b-it-lora\",\"@cf/meta-llama/llama-2-7b-chat-hf-lora\",\"@cf/deepseek-ai/deepseek-coder-7b-instruct-v1.5\",\"@cf/nexaaidev/octopus-v2\",\"@cf/m-a-p/opencodeinterpreter-ds-6.7b\",\"@cf/fblgit/una-cybertron-7b-v2-bf16\",\"@cf/sven/test\"],class:class extends B{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",oneOf:[{properties:{prompt:{type:\"string\",minLength:1,maxLength:6144},raw:{type:\"boolean\",default:!1},stream:{type:\"boolean\",default:!1},max_tokens:{type:\"integer\",default:256},temperature:{type:\"number\"},lora:{type:\"string\"}},required:[\"prompt\"]},{properties:{messages:{type:\"array\",items:{type:\"object\",properties:{role:{type:\"string\"},content:{type:\"string\",maxLength:6144}},required:[\"role\",\"content\"]}},stream:{type:\"boolean\",default:!1},max_tokens:{type:\"integer\",default:256},temperature:{type:\"number\"}},required:[\"messages\"]}]},output:{oneOf:[{type:\"object\",contentType:\"application/json\",properties:{response:{type:\"string\"}}},{type:\"string\",contentType:\"text/event-stream\",format:\"binary\"}]}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t||{experimental:!0,inputsDefaultsStream:{max_tokens:512},inputsDefaults:{max_tokens:256},preProcessingArgs:{promptTemplate:\"inst\",promptTemplateRaw:!1,defaultContext:\"\"}}}preProcessing(){const e=this.modelSettings.preProcessingArgs||{};this.inputs.stream&&this.modelSettings.inputsDefaultsStream?this.inputs={...this.modelSettings.inputsDefaultsStream,...this.inputs}:this.modelSettings.inputsDefaults&&(this.inputs={...this.modelSettings.inputsDefaults,...this.inputs}),this.preProcessedInputs={prompt:b(this.inputs,e),max_tokens:this.inputs.max_tokens,temperature:this.inputs.temperature,stream:!!this.inputs.stream}}generateTensors(e){if(this.modelSettings.generateTensorsFunc)return this.modelSettings.generateTensorsFunc(e);return[new p(s.String,[e.prompt],{shape:[1],name:\"INPUT_0\"}),new p(s.Uint32,[e.max_tokens],{shape:[1],name:\"INPUT_1\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs={response:this.modelSettings.postProcessingFunc(e,this.preProcessedInputs)}:this.postProcessedOutputs={response:e.name.value[0]}}postProcessingStream(e,t){return this.modelSettings.postProcessingFuncStream?{response:this.modelSettings.postProcessingFuncStream(e,this.preProcessedInputs,t)}:{response:e.name.value[0]}}},baseClass:B},translation:{models:[\"@cf/meta/m2m100-1.2b\"],class:class extends U{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",properties:{text:{type:\"string\",minLength:1},source_lang:{type:\"string\",default:\"en\"},target_lang:{type:\"string\"}},required:[\"text\",\"target_lang\"]},output:{type:\"object\",contentType:\"application/json\",properties:{translated_text:{type:\"string\"}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.String,[e.text],{shape:[1,1],name:\"text\"}),new p(s.String,[e.source_lang||\"en\"],{shape:[1,1],name:\"source_lang\"}),new p(s.String,[e.target_lang],{shape:[1,1],name:\"target_lang\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs={translated_text:e.name.value[0]}}},baseClass:U},summarization:{models:[\"@cf/facebook/bart-large-cnn\"],class:class extends P{modelSettings;preProcessedInputs;tensors;schema={input:{type:\"object\",properties:{input_text:{type:\"string\",minLength:1},max_length:{type:\"integer\",default:1024}},required:[\"input_text\"]},output:{type:\"object\",contentType:\"application/json\",properties:{summary:{type:\"string\"}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(e){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(e):[new p(s.Int32,[e.max_length||this.schema.input.properties.max_length.default],{shape:[1],name:\"max_length\"}),new p(s.String,[e.input_text],{shape:[1],name:\"input_text\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs={summary:e.name.value[0]}}},baseClass:P},\"image-to-text\":{models:[\"@cf/unum/uform-gen2-qwen-500m\",\"@cf/llava-hf/llava-1.5-7b-hf\"],class:class extends g{modelSettings;preProcessedInputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{temperature:{type:\"number\"},prompt:{type:\"string\"},raw:{type:\"boolean\",default:!1},messages:{type:\"array\",items:{type:\"object\",properties:{role:{type:\"string\"},content:{type:\"string\",maxLength:6144}},required:[\"role\",\"content\"]}},image:{oneOf:[{type:\"array\",items:{type:\"number\"}},{type:\"string\",format:\"binary\"}]},max_tokens:{type:\"integer\",default:512}},required:[\"image\"],not:{required:[\"prompt\",\"messages\"]},errorMessage:{not:'\"prompt\" and \"messages\" are mutually exclusive'}}]},output:{type:\"object\",contentType:\"application/json\",properties:{description:{type:\"string\"}}}};constructor(e,t){super(),this.inputs=e,this.modelSettings=t||{}}preProcessing(){const e=this.modelSettings.preProcessingArgs||{};this.inputs={...this.modelSettings.inputsDefaults,...this.inputs},this.preProcessedInputs={prompt:b(this.inputs,e),image:this.inputs.image,max_tokens:this.inputs.max_tokens,temperature:this.inputs.temperature}}generateTensors(e){if(this.modelSettings.generateTensorsFunc)return this.modelSettings.generateTensorsFunc(e);{let t=[new p(s.Int32,[e.max_tokens||this.schema.input.oneOf.filter((e=>\"object\"==e.type))[0].properties.max_tokens.default],{shape:[1],name:\"max_tokens\"}),new p(s.String,[e.prompt],{shape:[1],name:\"prompt\"}),new p(s.Uint8,e.image,{shape:[1,e.image.length],name:\"image\"})];return e.temperature&&(t=[...t,new p(s.Float32,[e.temperature],{shape:[1],name:\"temperature\"})]),t}}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs={description:this.modelSettings.postProcessingFunc(e,this.preProcessedInputs)}:this.postProcessedOutputs={description:e.name.value[0]}}},baseClass:g}};I(\"deepseek\",R,[\"<|EOT|>\"]),I(\"bare\",R),I(\"inst\",A),I(\"openchat\",A),I(\"chatml\",A,[\"<|im_end|>\"]),I(\"orca-hashes\",A),I(\"llama2\",A),I(\"zephyr\",A),I(\"mistral-instruct\",A),I(\"mistral-instruct\",A),I(\"gemma\",A),I(\"hermes2-pro\",A),I(\"starling\",A),I(\"llama2\",R),l({preProcessingArgs:{promptTemplate:\"phi-2\",defaultPromptMessages:(e,t)=>[{role:\"question\",content:t}]}}),l({preProcessingArgs:{promptTemplate:\"sqlcoder\"}}),l({preProcessingArgs:{defaultContext:\"\"}}),l({preProcessingArgs:{promptTemplate:\"falcon\"}}),l({preProcessingArgs:{promptTemplate:\"chatml\"}}),l({preProcessingArgs:{promptTemplate:\"chatml\"}}),l({preProcessingArgs:{promptTemplate:\"chatml\"}}),l({preProcessingArgs:{promptTemplate:\"chatml\"}}),l({preProcessingArgs:{promptTemplate:\"chatml\"}}),l({preProcessingArgs:{promptTemplate:\"tinyllama\"}}),l({preProcessingArgs:{promptTemplate:\"openchat-alt\"}}),l({preProcessingArgs:{promptTemplate:\"gemma\"}}),l({preProcessingArgs:{promptTemplate:\"gemma\"}}),l({preProcessingArgs:{promptTemplate:\"mistral-instruct\"}}),l({experimental:!0,preProcessingArgs:{promptTemplate:\"mistral-instruct\"}}),l({preProcessingArgs:{promptTemplate:\"llama2\"}}),l({experimental:!0,inputsDefaultsStream:{max_tokens:1800},inputsDefaults:{max_tokens:256},preProcessingArgs:{promptTemplate:\"mistral-instruct\"}}),l({preProcessingArgs:{promptTemplate:\"llama3\"}}),l({experimental:!0}),l({experimental:!0}),l({preProcessingArgs:{promptTemplate:\"chatml\"}}),l({experimental:!0}),O({inputsDefaultsStream:{max_tokens:2500},preProcessingArgs:{promptTemplate:\"llama2\"}}),O({preProcessingArgs:{promptTemplate:\"llama2\"}}),O({preProcessingArgs:{promptTemplate:\"mistral-instruct\"}});const K={\"@hf/mistral/mistral-7b-instruct-v0.2\":[\"@hf/mistralai/mistral-7b-instruct-v0.2\"],\"@cf/meta/llama-3-8b-instruct\":[\"@hf/meta-llama/meta-llama-3-8b-instruct\"],\"@cf/mistral/mistral-7b-instruct-v0.1-vllm\":[\"@cf/mistral/mistral-7b-instruct-v0.1\"]};class _ extends Error{httpCode;constructor(e,t){super(e),this.name=\"InferenceUpstreamError\",this.httpCode=t}}class W{binding;options;logs;lastRequestId;constructor(e,t={}){if(!e)throw new Error(\"Ai binding is undefined. Please provide a valid binding.\");this.binding=e,this.options=t,this.lastRequestId=\"\"}async run(e,t){const s=await this.binding.run(e,t,this.options);return this.lastRequestId=this.binding.lastRequestId,this.options.debug&&(this.logs=this.binding.getLogs()),s}getLogs(){return this.logs}}export{W as Ai,_ as InferenceUpstreamError,K as modelAliases,F as modelMappings};\n", "/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\nvar objectToString = Object.prototype.toString;\nvar isArray = Array.isArray || function isArrayPolyfill (object) {\n  return objectToString.call(object) === '[object Array]';\n};\n\nfunction isFunction (object) {\n  return typeof object === 'function';\n}\n\n/**\n * More correct typeof string handling array\n * which normally returns typeof 'object'\n */\nfunction typeStr (obj) {\n  return isArray(obj) ? 'array' : typeof obj;\n}\n\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Null safe way of checking whether or not an object,\n * including its prototype, has a given property\n */\nfunction hasProperty (obj, propName) {\n  return obj != null && typeof obj === 'object' && (propName in obj);\n}\n\n/**\n * Safe way of detecting whether or not the given thing is a primitive and\n * whether it has the given property\n */\nfunction primitiveHasOwnProperty (primitive, propName) {\n  return (\n    primitive != null\n    && typeof primitive !== 'object'\n    && primitive.hasOwnProperty\n    && primitive.hasOwnProperty(propName)\n  );\n}\n\n// Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n// See https://github.com/janl/mustache.js/issues/189\nvar regExpTest = RegExp.prototype.test;\nfunction testRegExp (re, string) {\n  return regExpTest.call(re, string);\n}\n\nvar nonSpaceRe = /\\S/;\nfunction isWhitespace (string) {\n  return !testRegExp(nonSpaceRe, string);\n}\n\nvar entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nfunction escapeHtml (string) {\n  return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n    return entityMap[s];\n  });\n}\n\nvar whiteRe = /\\s*/;\nvar spaceRe = /\\s+/;\nvar equalsRe = /\\s*=/;\nvar curlyRe = /\\s*\\}/;\nvar tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n/**\n * Breaks up the given `template` string into a tree of tokens. If the `tags`\n * argument is given here it must be an array with two string values: the\n * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n * course, the default is to use mustaches (i.e. mustache.tags).\n *\n * A token is an array with at least 4 elements. The first element is the\n * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n * all text that appears outside a symbol this element is \"text\".\n *\n * The second element of a token is its \"value\". For mustache tags this is\n * whatever else was inside the tag besides the opening symbol. For text tokens\n * this is the text itself.\n *\n * The third and fourth elements of the token are the start and end indices,\n * respectively, of the token in the original template.\n *\n * Tokens that are the root node of a subtree contain two more elements: 1) an\n * array of tokens in the subtree and 2) the index in the original template at\n * which the closing tag for that section begins.\n *\n * Tokens for partials also contain two more elements: 1) a string value of\n * indendation prior to that tag and 2) the index of that tag on that line -\n * eg a value of 2 indicates the partial is the third tag on this line.\n */\nfunction parseTemplate (template, tags) {\n  if (!template)\n    return [];\n  var lineHasNonSpace = false;\n  var sections = [];     // Stack to hold section tokens\n  var tokens = [];       // Buffer to hold the tokens\n  var spaces = [];       // Indices of whitespace tokens on the current line\n  var hasTag = false;    // Is there a {{tag}} on the current line?\n  var nonSpace = false;  // Is there a non-space char on the current line?\n  var indentation = '';  // Tracks indentation for tags that use it\n  var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n  // Strips all whitespace tokens array for the current line\n  // if there was a {{#tag}} on it and otherwise only space.\n  function stripSpace () {\n    if (hasTag && !nonSpace) {\n      while (spaces.length)\n        delete tokens[spaces.pop()];\n    } else {\n      spaces = [];\n    }\n\n    hasTag = false;\n    nonSpace = false;\n  }\n\n  var openingTagRe, closingTagRe, closingCurlyRe;\n  function compileTags (tagsToCompile) {\n    if (typeof tagsToCompile === 'string')\n      tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n    if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n      throw new Error('Invalid tags: ' + tagsToCompile);\n\n    openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n    closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n    closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n  }\n\n  compileTags(tags || mustache.tags);\n\n  var scanner = new Scanner(template);\n\n  var start, type, value, chr, token, openSection;\n  while (!scanner.eos()) {\n    start = scanner.pos;\n\n    // Match any text between tags.\n    value = scanner.scanUntil(openingTagRe);\n\n    if (value) {\n      for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n        chr = value.charAt(i);\n\n        if (isWhitespace(chr)) {\n          spaces.push(tokens.length);\n          indentation += chr;\n        } else {\n          nonSpace = true;\n          lineHasNonSpace = true;\n          indentation += ' ';\n        }\n\n        tokens.push([ 'text', chr, start, start + 1 ]);\n        start += 1;\n\n        // Check for whitespace on the current line.\n        if (chr === '\\n') {\n          stripSpace();\n          indentation = '';\n          tagIndex = 0;\n          lineHasNonSpace = false;\n        }\n      }\n    }\n\n    // Match the opening tag.\n    if (!scanner.scan(openingTagRe))\n      break;\n\n    hasTag = true;\n\n    // Get the tag type.\n    type = scanner.scan(tagRe) || 'name';\n    scanner.scan(whiteRe);\n\n    // Get the tag value.\n    if (type === '=') {\n      value = scanner.scanUntil(equalsRe);\n      scanner.scan(equalsRe);\n      scanner.scanUntil(closingTagRe);\n    } else if (type === '{') {\n      value = scanner.scanUntil(closingCurlyRe);\n      scanner.scan(curlyRe);\n      scanner.scanUntil(closingTagRe);\n      type = '&';\n    } else {\n      value = scanner.scanUntil(closingTagRe);\n    }\n\n    // Match the closing tag.\n    if (!scanner.scan(closingTagRe))\n      throw new Error('Unclosed tag at ' + scanner.pos);\n\n    if (type == '>') {\n      token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n    } else {\n      token = [ type, value, start, scanner.pos ];\n    }\n    tagIndex++;\n    tokens.push(token);\n\n    if (type === '#' || type === '^') {\n      sections.push(token);\n    } else if (type === '/') {\n      // Check section nesting.\n      openSection = sections.pop();\n\n      if (!openSection)\n        throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n      if (openSection[1] !== value)\n        throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n    } else if (type === 'name' || type === '{' || type === '&') {\n      nonSpace = true;\n    } else if (type === '=') {\n      // Set the tags for the next time around.\n      compileTags(value);\n    }\n  }\n\n  stripSpace();\n\n  // Make sure there are no open sections when we're done.\n  openSection = sections.pop();\n\n  if (openSection)\n    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n  return nestTokens(squashTokens(tokens));\n}\n\n/**\n * Combines the values of consecutive text tokens in the given `tokens` array\n * to a single token.\n */\nfunction squashTokens (tokens) {\n  var squashedTokens = [];\n\n  var token, lastToken;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    if (token) {\n      if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n        lastToken[1] += token[1];\n        lastToken[3] = token[3];\n      } else {\n        squashedTokens.push(token);\n        lastToken = token;\n      }\n    }\n  }\n\n  return squashedTokens;\n}\n\n/**\n * Forms the given array of `tokens` into a nested tree structure where\n * tokens that represent a section have two additional items: 1) an array of\n * all tokens that appear in that section and 2) the index in the original\n * template that represents the end of that section.\n */\nfunction nestTokens (tokens) {\n  var nestedTokens = [];\n  var collector = nestedTokens;\n  var sections = [];\n\n  var token, section;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n    }\n  }\n\n  return nestedTokens;\n}\n\n/**\n * A simple string scanner that is used by the template parser to find\n * tokens in template strings.\n */\nfunction Scanner (string) {\n  this.string = string;\n  this.tail = string;\n  this.pos = 0;\n}\n\n/**\n * Returns `true` if the tail is empty (end of string).\n */\nScanner.prototype.eos = function eos () {\n  return this.tail === '';\n};\n\n/**\n * Tries to match the given regular expression at the current position.\n * Returns the matched text if it can match, the empty string otherwise.\n */\nScanner.prototype.scan = function scan (re) {\n  var match = this.tail.match(re);\n\n  if (!match || match.index !== 0)\n    return '';\n\n  var string = match[0];\n\n  this.tail = this.tail.substring(string.length);\n  this.pos += string.length;\n\n  return string;\n};\n\n/**\n * Skips all text until the given regular expression can be matched. Returns\n * the skipped string, which is the entire tail if no match can be made.\n */\nScanner.prototype.scanUntil = function scanUntil (re) {\n  var index = this.tail.search(re), match;\n\n  switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = '';\n      break;\n    case 0:\n      match = '';\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n  }\n\n  this.pos += match.length;\n\n  return match;\n};\n\n/**\n * Represents a rendering context by wrapping a view object and\n * maintaining a reference to the parent context.\n */\nfunction Context (view, parentContext) {\n  this.view = view;\n  this.cache = { '.': this.view };\n  this.parent = parentContext;\n}\n\n/**\n * Creates a new context using the given view with this context\n * as the parent.\n */\nContext.prototype.push = function push (view) {\n  return new Context(view, this);\n};\n\n/**\n * Returns the value of the given name in this context, traversing\n * up the context hierarchy if the value is absent in this context's view.\n */\nContext.prototype.lookup = function lookup (name) {\n  var cache = this.cache;\n\n  var value;\n  if (cache.hasOwnProperty(name)) {\n    value = cache[name];\n  } else {\n    var context = this, intermediateValue, names, index, lookupHit = false;\n\n    while (context) {\n      if (name.indexOf('.') > 0) {\n        intermediateValue = context.view;\n        names = name.split('.');\n        index = 0;\n\n        /**\n         * Using the dot notion path in `name`, we descend through the\n         * nested objects.\n         *\n         * To be certain that the lookup has been successful, we have to\n         * check if the last object in the path actually has the property\n         * we are looking for. We store the result in `lookupHit`.\n         *\n         * This is specially necessary for when the value has been set to\n         * `undefined` and we want to avoid looking up parent contexts.\n         *\n         * In the case where dot notation is used, we consider the lookup\n         * to be successful even if the last \"object\" in the path is\n         * not actually an object but a primitive (e.g., a string, or an\n         * integer), because it is sometimes useful to access a property\n         * of an autoboxed primitive, such as the length of a string.\n         **/\n        while (intermediateValue != null && index < names.length) {\n          if (index === names.length - 1)\n            lookupHit = (\n              hasProperty(intermediateValue, names[index])\n              || primitiveHasOwnProperty(intermediateValue, names[index])\n            );\n\n          intermediateValue = intermediateValue[names[index++]];\n        }\n      } else {\n        intermediateValue = context.view[name];\n\n        /**\n         * Only checking against `hasProperty`, which always returns `false` if\n         * `context.view` is not an object. Deliberately omitting the check\n         * against `primitiveHasOwnProperty` if dot notation is not used.\n         *\n         * Consider this example:\n         * ```\n         * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n         * ```\n         *\n         * If we were to check also against `primitiveHasOwnProperty`, as we do\n         * in the dot notation case, then render call would return:\n         *\n         * \"The length of a football field is 9.\"\n         *\n         * rather than the expected:\n         *\n         * \"The length of a football field is 100 yards.\"\n         **/\n        lookupHit = hasProperty(context.view, name);\n      }\n\n      if (lookupHit) {\n        value = intermediateValue;\n        break;\n      }\n\n      context = context.parent;\n    }\n\n    cache[name] = value;\n  }\n\n  if (isFunction(value))\n    value = value.call(this.view);\n\n  return value;\n};\n\n/**\n * A Writer knows how to take a stream of tokens and render them to a\n * string, given a context. It also maintains a cache of templates to\n * avoid the need to parse the same template twice.\n */\nfunction Writer () {\n  this.templateCache = {\n    _cache: {},\n    set: function set (key, value) {\n      this._cache[key] = value;\n    },\n    get: function get (key) {\n      return this._cache[key];\n    },\n    clear: function clear () {\n      this._cache = {};\n    }\n  };\n}\n\n/**\n * Clears all cached templates in this writer.\n */\nWriter.prototype.clearCache = function clearCache () {\n  if (typeof this.templateCache !== 'undefined') {\n    this.templateCache.clear();\n  }\n};\n\n/**\n * Parses and caches the given `template` according to the given `tags` or\n * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n * that is generated from the parse.\n */\nWriter.prototype.parse = function parse (template, tags) {\n  var cache = this.templateCache;\n  var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n  var isCacheEnabled = typeof cache !== 'undefined';\n  var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n  if (tokens == undefined) {\n    tokens = parseTemplate(template, tags);\n    isCacheEnabled && cache.set(cacheKey, tokens);\n  }\n  return tokens;\n};\n\n/**\n * High-level method that is used to render the given `template` with\n * the given `view`.\n *\n * The optional `partials` argument may be an object that contains the\n * names and templates of partials that are used in the template. It may\n * also be a function that is used to load partial templates on the fly\n * that takes a single argument: the name of the partial.\n *\n * If the optional `config` argument is given here, then it should be an\n * object with a `tags` attribute or an `escape` attribute or both.\n * If an array is passed, then it will be interpreted the same way as\n * a `tags` attribute on a `config` object.\n *\n * The `tags` attribute of a `config` object must be an array with two\n * string values: the opening and closing tags used in the template (e.g.\n * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n *\n * The `escape` attribute of a `config` object must be a function which\n * accepts a string as input and outputs a safely escaped string.\n * If an `escape` function is not provided, then an HTML-safe string\n * escaping function is used as the default.\n */\nWriter.prototype.render = function render (template, view, partials, config) {\n  var tags = this.getConfigTags(config);\n  var tokens = this.parse(template, tags);\n  var context = (view instanceof Context) ? view : new Context(view, undefined);\n  return this.renderTokens(tokens, context, partials, template, config);\n};\n\n/**\n * Low-level method that renders the given array of `tokens` using\n * the given `context` and `partials`.\n *\n * Note: The `originalTemplate` is only ever used to extract the portion\n * of the original template that was contained in a higher-order section.\n * If the template doesn't use higher-order sections, this argument may\n * be omitted.\n */\nWriter.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n  var buffer = '';\n\n  var token, symbol, value;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    value = undefined;\n    token = tokens[i];\n    symbol = token[0];\n\n    if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n    else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n    else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n    else if (symbol === '&') value = this.unescapedValue(token, context);\n    else if (symbol === 'name') value = this.escapedValue(token, context, config);\n    else if (symbol === 'text') value = this.rawValue(token);\n\n    if (value !== undefined)\n      buffer += value;\n  }\n\n  return buffer;\n};\n\nWriter.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n  var self = this;\n  var buffer = '';\n  var value = context.lookup(token[1]);\n\n  // This function is used to render an arbitrary template\n  // in the current context by higher-order sections.\n  function subRender (template) {\n    return self.render(template, context, partials, config);\n  }\n\n  if (!value) return;\n\n  if (isArray(value)) {\n    for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n      buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n    }\n  } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n    buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n  } else if (isFunction(value)) {\n    if (typeof originalTemplate !== 'string')\n      throw new Error('Cannot use higher-order sections without the original template');\n\n    // Extract the portion of the original template that the section contains.\n    value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n    if (value != null)\n      buffer += value;\n  } else {\n    buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n  }\n  return buffer;\n};\n\nWriter.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n  var value = context.lookup(token[1]);\n\n  // Use JavaScript's definition of falsy. Include empty arrays.\n  // See https://github.com/janl/mustache.js/issues/186\n  if (!value || (isArray(value) && value.length === 0))\n    return this.renderTokens(token[4], context, partials, originalTemplate, config);\n};\n\nWriter.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n  var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n  var partialByNl = partial.split('\\n');\n  for (var i = 0; i < partialByNl.length; i++) {\n    if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n      partialByNl[i] = filteredIndentation + partialByNl[i];\n    }\n  }\n  return partialByNl.join('\\n');\n};\n\nWriter.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n  if (!partials) return;\n  var tags = this.getConfigTags(config);\n\n  var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n  if (value != null) {\n    var lineHasNonSpace = token[6];\n    var tagIndex = token[5];\n    var indentation = token[4];\n    var indentedValue = value;\n    if (tagIndex == 0 && indentation) {\n      indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n    }\n    var tokens = this.parse(indentedValue, tags);\n    return this.renderTokens(tokens, context, partials, indentedValue, config);\n  }\n};\n\nWriter.prototype.unescapedValue = function unescapedValue (token, context) {\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return value;\n};\n\nWriter.prototype.escapedValue = function escapedValue (token, context, config) {\n  var escape = this.getConfigEscape(config) || mustache.escape;\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n};\n\nWriter.prototype.rawValue = function rawValue (token) {\n  return token[1];\n};\n\nWriter.prototype.getConfigTags = function getConfigTags (config) {\n  if (isArray(config)) {\n    return config;\n  }\n  else if (config && typeof config === 'object') {\n    return config.tags;\n  }\n  else {\n    return undefined;\n  }\n};\n\nWriter.prototype.getConfigEscape = function getConfigEscape (config) {\n  if (config && typeof config === 'object' && !isArray(config)) {\n    return config.escape;\n  }\n  else {\n    return undefined;\n  }\n};\n\nvar mustache = {\n  name: 'mustache.js',\n  version: '4.2.0',\n  tags: [ '{{', '}}' ],\n  clearCache: undefined,\n  escape: undefined,\n  parse: undefined,\n  render: undefined,\n  Scanner: undefined,\n  Context: undefined,\n  Writer: undefined,\n  /**\n   * Allows a user to override the default caching strategy, by providing an\n   * object with set, get and clear methods. This can also be used to disable\n   * the cache by setting it to the literal `undefined`.\n   */\n  set templateCache (cache) {\n    defaultWriter.templateCache = cache;\n  },\n  /**\n   * Gets the default or overridden caching object from the default writer.\n   */\n  get templateCache () {\n    return defaultWriter.templateCache;\n  }\n};\n\n// All high-level mustache.* functions use this writer.\nvar defaultWriter = new Writer();\n\n/**\n * Clears all cached templates in the default writer.\n */\nmustache.clearCache = function clearCache () {\n  return defaultWriter.clearCache();\n};\n\n/**\n * Parses and caches the given template in the default writer and returns the\n * array of tokens it contains. Doing this ahead of time avoids the need to\n * parse templates on the fly as they are rendered.\n */\nmustache.parse = function parse (template, tags) {\n  return defaultWriter.parse(template, tags);\n};\n\n/**\n * Renders the `template` with the given `view`, `partials`, and `config`\n * using the default writer.\n */\nmustache.render = function render (template, view, partials, config) {\n  if (typeof template !== 'string') {\n    throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                        'but \"' + typeStr(template) + '\" was given as the first ' +\n                        'argument for mustache#render(template, view, partials)');\n  }\n\n  return defaultWriter.render(template, view, partials, config);\n};\n\n// Export the escaping function so that the user may override it.\n// See https://github.com/janl/mustache.js/issues/244\nmustache.escape = escapeHtml;\n\n// Export these mainly for testing, but also for advanced usage.\nmustache.Scanner = Scanner;\nmustache.Context = Context;\nmustache.Writer = Writer;\n\nexport default mustache;\n", "// src/index.ts\nimport { Hono } from \"./hono.js\";\nexport {\n  Hono\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar COMPOSED_HANDLER = Symbol(\"composedHandler\");\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    return err.getResponse();\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          if (typeof handler !== \"string\") {\n            this.addRoute(method, this.#path, handler);\n          }\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const strict = options.strict ?? true;\n    delete options.strict;\n    Object.assign(this, options);\n    this.getPath = strict ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        replaceRequest = options.replaceRequest;\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  matchRoute(method, path) {\n    return this.router.match(method, path);\n  }\n  handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.matchRoute(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.notFoundHandler(c))\n      ).catch((err) => this.handleError(err, c)) : res ?? this.notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      if (requestInit !== void 0) {\n        input = new Request(input, requestInit);\n      }\n      return this.fetch(input, Env, executionCtx);\n    }\n    input = input.toString();\n    const path = /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`;\n    const req = new Request(path, requestInit);\n    return this.fetch(req, Env, executionCtx);\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  COMPOSED_HANDLER,\n  Hono as HonoBase\n};\n", "// src/compose.ts\nimport { Context } from \"./context.js\";\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        if (context instanceof Context) {\n          context.req.routeIndex = i;\n        }\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (!handler) {\n        if (context instanceof Context && context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      } else {\n        try {\n          res = await handler(context, () => {\n            return dispatch(i + 1);\n          });\n        } catch (err) {\n          if (err instanceof Error && context instanceof Context && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  Object.entries(map).forEach(([key, value]) => headers.set(key, value));\n  return headers;\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status = 200;\n  #executionCtx;\n  #headers;\n  #preparedHeaders;\n  #res;\n  #isFresh = true;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    this.#isFresh = false;\n    return this.#res ||= new Response(\"404 Not Found\", { status: 404 });\n  }\n  set res(_res) {\n    this.#isFresh = false;\n    if (this.#res && _res) {\n      try {\n        for (const [k, v] of this.#res.headers.entries()) {\n          if (k === \"content-type\") {\n            continue;\n          }\n          if (k === \"set-cookie\") {\n            const cookies = this.#res.headers.getSetCookie();\n            _res.headers.delete(\"set-cookie\");\n            for (const cookie of cookies) {\n              _res.headers.append(\"set-cookie\", cookie);\n            }\n          } else {\n            _res.headers.set(k, v);\n          }\n        }\n      } catch (e) {\n        if (e instanceof TypeError && e.message.includes(\"immutable\")) {\n          this.res = new Response(_res.body, {\n            headers: _res.headers,\n            status: _res.status\n          });\n          return;\n        } else {\n          throw e;\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (value === void 0) {\n      if (this.#headers) {\n        this.#headers.delete(name);\n      } else if (this.#preparedHeaders) {\n        delete this.#preparedHeaders[name.toLocaleLowerCase()];\n      }\n      if (this.finalized) {\n        this.res.headers.delete(name);\n      }\n      return;\n    }\n    if (options?.append) {\n      if (!this.#headers) {\n        this.#isFresh = false;\n        this.#headers = new Headers(this.#preparedHeaders);\n        this.#preparedHeaders = {};\n      }\n      this.#headers.append(name, value);\n    } else {\n      if (this.#headers) {\n        this.#headers.set(name, value);\n      } else {\n        this.#preparedHeaders ??= {};\n        this.#preparedHeaders[name.toLowerCase()] = value;\n      }\n    }\n    if (this.finalized) {\n      if (options?.append) {\n        this.res.headers.append(name, value);\n      } else {\n        this.res.headers.set(name, value);\n      }\n    }\n  };\n  status = (status) => {\n    this.#isFresh = false;\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  newResponse = (data, arg, headers) => {\n    if (this.#isFresh && !headers && !arg && this.#status === 200) {\n      return new Response(data, {\n        headers: this.#preparedHeaders\n      });\n    }\n    if (arg && typeof arg !== \"number\") {\n      const header = new Headers(arg.headers);\n      if (this.#headers) {\n        this.#headers.forEach((v, k) => {\n          if (k === \"set-cookie\") {\n            header.append(k, v);\n          } else {\n            header.set(k, v);\n          }\n        });\n      }\n      const headers2 = setHeaders(header, this.#preparedHeaders);\n      return new Response(data, {\n        headers: headers2,\n        status: arg.status ?? this.#status\n      });\n    }\n    const status = typeof arg === \"number\" ? arg : this.#status;\n    this.#preparedHeaders ??= {};\n    this.#headers ??= new Headers();\n    setHeaders(this.#headers, this.#preparedHeaders);\n    if (this.#res) {\n      this.#res.headers.forEach((v, k) => {\n        if (k === \"set-cookie\") {\n          this.#headers?.append(k, v);\n        } else {\n          this.#headers?.set(k, v);\n        }\n      });\n      setHeaders(this.#headers, this.#preparedHeaders);\n    }\n    headers ??= {};\n    for (const [k, v] of Object.entries(headers)) {\n      if (typeof v === \"string\") {\n        this.#headers.set(k, v);\n      } else {\n        this.#headers.delete(k);\n        for (const v2 of v) {\n          this.#headers.append(k, v2);\n        }\n      }\n    }\n    return new Response(data, {\n      status,\n      headers: this.#headers\n    });\n  };\n  body = (data, arg, headers) => {\n    return typeof arg === \"number\" ? this.newResponse(data, arg, headers) : this.newResponse(data, arg);\n  };\n  text = (text, arg, headers) => {\n    if (!this.#preparedHeaders) {\n      if (this.#isFresh && !headers && !arg) {\n        return new Response(text);\n      }\n      this.#preparedHeaders = {};\n    }\n    this.#preparedHeaders[\"content-type\"] = TEXT_PLAIN;\n    return typeof arg === \"number\" ? this.newResponse(text, arg, headers) : this.newResponse(text, arg);\n  };\n  json = (object, arg, headers) => {\n    const body = JSON.stringify(object);\n    this.#preparedHeaders ??= {};\n    this.#preparedHeaders[\"content-type\"] = \"application/json; charset=UTF-8\";\n    return typeof arg === \"number\" ? this.newResponse(body, arg, headers) : this.newResponse(body, arg);\n  };\n  html = (html, arg, headers) => {\n    this.#preparedHeaders ??= {};\n    this.#preparedHeaders[\"content-type\"] = \"text/html; charset=UTF-8\";\n    if (typeof html === \"object\") {\n      return resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then((html2) => {\n        return typeof arg === \"number\" ? this.newResponse(html2, arg, headers) : this.newResponse(html2, arg);\n      });\n    }\n    return typeof arg === \"number\" ? this.newResponse(html, arg, headers) : this.newResponse(html, arg);\n  };\n  redirect = (location, status) => {\n    this.#headers ??= new Headers();\n    this.#headers.set(\"Location\", location);\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams } from \"./utils/url.js\";\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.getDecodedParam(key) : this.getAllDecodedParams();\n  }\n  getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? decodeURIComponent_(param) : param : void 0;\n  }\n  getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? decodeURIComponent_(value) : value;\n      }\n    }\n    return decoded;\n  }\n  getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name.toLowerCase()) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.cachedBody(\"json\");\n  }\n  text() {\n    return this.cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.cachedBody(\"blob\");\n  }\n  formData() {\n    return this.cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    form[key] = value;\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    if (!patternCache[label]) {\n      if (match[2]) {\n        patternCache[label] = [label, match[1], new RegExp(\"^\" + match[2] + \"$\")];\n      } else {\n        patternCache[label] = [label, match[1], true];\n      }\n    }\n    return patternCache[label];\n  }\n  return null;\n};\nvar tryDecodeURI = (str) => {\n  try {\n    return decodeURI(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decodeURI(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", 8);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result[result.length - 1] === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (...paths) => {\n  let p = \"\";\n  let endsWithSlash = false;\n  for (let path of paths) {\n    if (p[p.length - 1] === \"/\") {\n      p = p.slice(0, -1);\n      endsWithSlash = true;\n    }\n    if (path[0] !== \"/\") {\n      path = `/${path}`;\n    }\n    if (path === \"/\" && endsWithSlash) {\n      p = `${p}/`;\n    } else if (path !== \"/\") {\n      p = `${p}${path}`;\n    }\n    if (path === \"/\" && p === \"\") {\n      p = \"/\";\n    }\n  }\n  return p;\n};\nvar checkOptionalParameter = (path) => {\n  if (!path.match(/\\:.+\\?$/)) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return /%/.test(value) ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/router/reg-exp-router/index.ts\nimport { RegExpRouter } from \"./router.js\";\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  middleware;\n  routes;\n  constructor() {\n    this.middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const { middleware, routes } = this;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    [...Object.keys(this.routes), ...Object.keys(this.middleware)].forEach((method) => {\n      matchers[method] ||= this.buildMatcher(method);\n    });\n    this.middleware = this.routes = void 0;\n    return matchers;\n  }\n  buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.middleware, this.routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  index;\n  varIndex;\n  children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.varIndex]);\n      }\n    } else {\n      node = this.children[token];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.children[k];\n      return (typeof c.varIndex === \"number\" ? `(${k})@${c.varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.index === \"number\") {\n      strList.unshift(`#${this.index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  context = { varIndex: 0 };\n  root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.root.insert(tokens, index, paramAssoc, this.context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (typeof handlerIndex !== \"undefined\") {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (typeof paramIndex !== \"undefined\") {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/smart-router/index.ts\nimport { SmartRouter } from \"./router.js\";\nexport {\n  SmartRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  routers = [];\n  routes = [];\n  constructor(init) {\n    Object.assign(this, init);\n  }\n  add(method, path, handler) {\n    if (!this.routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const { routers, routes } = this;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        routes.forEach((args) => {\n          router.add(...args);\n        });\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.routers = [router];\n      this.routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.routes || this.routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/index.ts\nimport { TrieRouter } from \"./router.js\";\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  node;\n  constructor() {\n    this.node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (const p of results) {\n        this.node.insert(method, p, handler);\n      }\n      return;\n    }\n    this.node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar Node = class {\n  methods;\n  children;\n  patterns;\n  order = 0;\n  name;\n  params = /* @__PURE__ */ Object.create(null);\n  constructor(method, handler, children) {\n    this.children = children || /* @__PURE__ */ Object.create(null);\n    this.methods = [];\n    this.name = \"\";\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0, name: this.name };\n      this.methods = [m];\n    }\n    this.patterns = [];\n  }\n  insert(method, path, handler) {\n    this.name = `${method} ${path}`;\n    this.order = ++this.order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      if (Object.keys(curNode.children).includes(p)) {\n        curNode = curNode.children[p];\n        const pattern2 = getPattern(p);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      curNode.children[p] = new Node();\n      const pattern = getPattern(p);\n      if (pattern) {\n        curNode.patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.children[p];\n    }\n    if (!curNode.methods.length) {\n      curNode.methods = [];\n    }\n    const m = /* @__PURE__ */ Object.create(null);\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      name: this.name,\n      score: this.order\n    };\n    m[method] = handlerSet;\n    curNode.methods.push(m);\n    return curNode;\n  }\n  gHSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.methods.length; i < len; i++) {\n      const m = node.methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = /* @__PURE__ */ Object.create(null);\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSet.possibleKeys.forEach((key) => {\n          const processed = processedSet[handlerSet.name];\n          handlerSet.params[key] = params[key] && !processed ? params[key] : nodeParams[key] ?? params[key];\n          processedSet[handlerSet.name] = true;\n        });\n        handlerSets.push(handlerSet);\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.params = /* @__PURE__ */ Object.create(null);\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.children[part];\n        if (nextNode) {\n          nextNode.params = node.params;\n          if (isLast === true) {\n            if (nextNode.children[\"*\"]) {\n              handlerSets.push(\n                ...this.gHSets(nextNode.children[\"*\"], method, node.params, /* @__PURE__ */ Object.create(null))\n              );\n            }\n            handlerSets.push(...this.gHSets(nextNode, method, node.params, /* @__PURE__ */ Object.create(null)));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.patterns.length; k < len3; k++) {\n          const pattern = node.patterns[k];\n          const params = { ...node.params };\n          if (pattern === \"*\") {\n            const astNode = node.children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.gHSets(astNode, method, node.params, /* @__PURE__ */ Object.create(null)));\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp && matcher.test(restPathString)) {\n            params[name] = restPathString;\n            handlerSets.push(...this.gHSets(child, method, node.params, params));\n            continue;\n          }\n          if (matcher === true || matcher instanceof RegExp && matcher.test(part)) {\n            if (typeof key === \"string\") {\n              params[name] = part;\n              if (isLast === true) {\n                handlerSets.push(...this.gHSets(child, method, params, node.params));\n                if (child.children[\"*\"]) {\n                  handlerSets.push(...this.gHSets(child.children[\"*\"], method, params, node.params));\n                }\n              } else {\n                child.params = params;\n                tempNodes.push(child);\n              }\n            }\n          }\n        }\n      }\n      curNodes = tempNodes;\n    }\n    const results = handlerSets.sort((a, b) => {\n      return a.score - b.score;\n    });\n    return [results.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/utils.ts\nfunction bytesToByteString(bytes) {\n  let byteStr = \"\";\n  for (let i = 0; i < bytes.byteLength; i++) {\n    byteStr += String.fromCharCode(bytes[i]);\n  }\n  return byteStr;\n}\nfunction byteStringToBytes(byteStr) {\n  let bytes = new Uint8Array(byteStr.length);\n  for (let i = 0; i < byteStr.length; i++) {\n    bytes[i] = byteStr.charCodeAt(i);\n  }\n  return bytes;\n}\nfunction arrayBufferToBase64String(arrayBuffer) {\n  return btoa(bytesToByteString(new Uint8Array(arrayBuffer)));\n}\nfunction base64StringToArrayBuffer(b64str) {\n  return byteStringToBytes(atob(b64str)).buffer;\n}\nfunction textToArrayBuffer(str) {\n  return byteStringToBytes(str);\n}\nfunction arrayBufferToBase64Url(arrayBuffer) {\n  return arrayBufferToBase64String(arrayBuffer).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToArrayBuffer(b64url) {\n  return base64StringToArrayBuffer(b64url.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\"));\n}\nfunction textToBase64Url(str) {\n  const encoder = new TextEncoder();\n  const charCodes = encoder.encode(str);\n  const binaryStr = String.fromCharCode(...charCodes);\n  return btoa(binaryStr).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction pemToBinary(pem) {\n  return base64StringToArrayBuffer(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\n}\nasync function importTextSecret(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"raw\", textToArrayBuffer(key), algorithm, true, keyUsages);\n}\nasync function importJwk(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"jwk\", key, algorithm, true, keyUsages);\n}\nasync function importPublicKey(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"spki\", pemToBinary(key), algorithm, true, keyUsages);\n}\nasync function importPrivateKey(key, algorithm, keyUsages) {\n  return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), algorithm, true, keyUsages);\n}\nasync function importKey(key, algorithm, keyUsages) {\n  if (typeof key === \"object\")\n    return importJwk(key, algorithm, keyUsages);\n  if (typeof key !== \"string\")\n    throw new Error(\"Unsupported key type!\");\n  if (key.includes(\"PUBLIC\"))\n    return importPublicKey(key, algorithm, keyUsages);\n  if (key.includes(\"PRIVATE\"))\n    return importPrivateKey(key, algorithm, keyUsages);\n  return importTextSecret(key, algorithm, keyUsages);\n}\nfunction decodePayload(raw) {\n  try {\n    const bytes = Array.from(atob(raw), (char) => char.charCodeAt(0));\n    const decodedString = new TextDecoder(\"utf-8\").decode(new Uint8Array(bytes));\n    return JSON.parse(decodedString);\n  } catch {\n    return;\n  }\n}\n\n// src/index.ts\nif (typeof crypto === \"undefined\" || !crypto.subtle)\n  throw new Error(\"SubtleCrypto not supported!\");\nvar algorithms = {\n  ES256: { name: \"ECDSA\", namedCurve: \"P-256\", hash: { name: \"SHA-256\" } },\n  ES384: { name: \"ECDSA\", namedCurve: \"P-384\", hash: { name: \"SHA-384\" } },\n  ES512: { name: \"ECDSA\", namedCurve: \"P-521\", hash: { name: \"SHA-512\" } },\n  HS256: { name: \"HMAC\", hash: { name: \"SHA-256\" } },\n  HS384: { name: \"HMAC\", hash: { name: \"SHA-384\" } },\n  HS512: { name: \"HMAC\", hash: { name: \"SHA-512\" } },\n  RS256: { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-256\" } },\n  RS384: { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-384\" } },\n  RS512: { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-512\" } }\n};\nasync function sign(payload, secret, options = \"HS256\") {\n  if (typeof options === \"string\")\n    options = { algorithm: options };\n  options = { algorithm: \"HS256\", header: { typ: \"JWT\", ...options.header ?? {} }, ...options };\n  if (!payload || typeof payload !== \"object\")\n    throw new Error(\"payload must be an object\");\n  if (!secret || typeof secret !== \"string\" && typeof secret !== \"object\")\n    throw new Error(\"secret must be a string, a JWK object or a CryptoKey object\");\n  if (typeof options.algorithm !== \"string\")\n    throw new Error(\"options.algorithm must be a string\");\n  const algorithm = algorithms[options.algorithm];\n  if (!algorithm)\n    throw new Error(\"algorithm not found\");\n  if (!payload.iat)\n    payload.iat = Math.floor(Date.now() / 1e3);\n  const partialToken = `${textToBase64Url(JSON.stringify({ ...options.header, alg: options.algorithm }))}.${textToBase64Url(JSON.stringify(payload))}`;\n  const key = secret instanceof CryptoKey ? secret : await importKey(secret, algorithm, [\"sign\"]);\n  const signature = await crypto.subtle.sign(algorithm, key, textToArrayBuffer(partialToken));\n  return `${partialToken}.${arrayBufferToBase64Url(signature)}`;\n}\nasync function verify(token, secret, options = \"HS256\") {\n  if (typeof options === \"string\")\n    options = { algorithm: options };\n  options = { algorithm: \"HS256\", clockTolerance: 0, throwError: false, ...options };\n  if (typeof token !== \"string\")\n    throw new Error(\"token must be a string\");\n  if (typeof secret !== \"string\" && typeof secret !== \"object\")\n    throw new Error(\"secret must be a string, a JWK object or a CryptoKey object\");\n  if (typeof options.algorithm !== \"string\")\n    throw new Error(\"options.algorithm must be a string\");\n  const tokenParts = token.split(\".\");\n  if (tokenParts.length !== 3)\n    throw new Error(\"token must consist of 3 parts\");\n  const algorithm = algorithms[options.algorithm];\n  if (!algorithm)\n    throw new Error(\"algorithm not found\");\n  const decodedToken = decode(token);\n  try {\n    if (decodedToken.header?.alg !== options.algorithm)\n      throw new Error(\"INVALID_SIGNATURE\");\n    if (decodedToken.payload) {\n      const now = Math.floor(Date.now() / 1e3);\n      if (decodedToken.payload.nbf && decodedToken.payload.nbf > now && decodedToken.payload.nbf - now > (options.clockTolerance ?? 0))\n        throw new Error(\"NOT_YET_VALID\");\n      if (decodedToken.payload.exp && decodedToken.payload.exp <= now && now - decodedToken.payload.exp > (options.clockTolerance ?? 0))\n        throw new Error(\"EXPIRED\");\n    }\n    const key = secret instanceof CryptoKey ? secret : await importKey(secret, algorithm, [\"verify\"]);\n    if (!await crypto.subtle.verify(algorithm, key, base64UrlToArrayBuffer(tokenParts[2]), textToArrayBuffer(`${tokenParts[0]}.${tokenParts[1]}`)))\n      throw new Error(\"INVALID_SIGNATURE\");\n    return decodedToken;\n  } catch (err) {\n    if (options.throwError)\n      throw err;\n    return;\n  }\n}\nfunction decode(token) {\n  return {\n    header: decodePayload(token.split(\".\")[0].replace(/-/g, \"+\").replace(/_/g, \"/\")),\n    payload: decodePayload(token.split(\".\")[1].replace(/-/g, \"+\").replace(/_/g, \"/\"))\n  };\n}\nvar src_default = {\n  sign,\n  verify,\n  decode\n};\nexport {\n  decode,\n  src_default as default,\n  sign,\n  verify\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      if (opts.allowMethods?.length) {\n        set(\"Access-Control-Allow-Methods\", opts.allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: c.res.statusText\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["lookup", "i", "len", "len2", "s", "i", "clearCache", "parse", "render", "e", "t", "s", "n", "r", "a", "o", "e", "e", "s", "i", "p", "i", "a", "raw", "c", "Context", "e", "i", "Context", "c", "p", "m", "app", "r", "Context", "a", "c", "i", "m", "i", "e", "a", "p", "m", "r", "i", "e", "Node", "m", "i", "p", "a", "Node", "p", "Hono", "i", "raw", "c", "Hono", "c", "m", "e", "e"]
}
